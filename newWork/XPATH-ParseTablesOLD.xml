<parseTables>
  <!-- All grammar rules are coded in this section -->
	<rules>
	  <r left="$accept" length="2">
	    <right>Expr</right>
	    <right>$end</right>
	  </r>

	  <r left="Expr" length="1">
	    <right>ExprSingle</right>
	  </r>

	  <r left="Expr" length="3">
	    <right>Expr</right>
	    <right>,</right>
	    <right>ExprSingle</right>
	  </r>

	  <r left="ExprSingle" length="1">
	    <right>ForExpr</right>
	  </r>

	  <r left="ExprSingle" length="1">
	    <right>QuantifiedExpr</right>
	  </r>

	  <r left="ExprSingle" length="1">
	    <right>IfExpr</right>
	  </r>

	  <r left="ExprSingle" length="1">
	    <right>OrExpr</right>
	  </r>

	  <r left="ForExpr" length="4">
	    <right>FOR</right>
	    <right>VarnameList</right>
	    <right>RETURN</right>
	    <right>ExprSingle</right>
	  </r>

	  <r left="VarnameList" length="3">
	    <right>VariableReference</right>
	    <right>IN</right>
	    <right>ExprSingle</right>
	  </r>

	  <r left="VarnameList" length="5">
	    <right>VarnameList</right>
	    <right>,</right>
	    <right>VariableReference</right>
	    <right>IN</right>
	    <right>ExprSingle</right>
	  </r>

	  <r left="QuantifiedExpr" length="4">
	    <right>SomeOrEvery</right>
	    <right>VarnameList</right>
	    <right>SATISFIES</right>
	    <right>ExprSingle</right>
	  </r>

	  <r left="SomeOrEvery" length="1">
	    <right>SOME</right>
	  </r>

	  <r left="SomeOrEvery" length="1">
	    <right>EVERY</right>
	  </r>

	  <r left="IfExpr" length="8">
	    <right>IF</right>
	    <right>(</right>
	    <right>Expr</right>
	    <right>)</right>
	    <right>THEN</right>
	    <right>ExprSingle</right>
	    <right>ELSE</right>
	    <right>ExprSingle</right>
	  </r>

	  <r left="OrExpr" length="1">
	    <right>AndExpr</right>
	  </r>

	  <r left="OrExpr" length="3">
	    <right>OrExpr</right>
	    <right>OR</right>
	    <right>AndExpr</right>
	  </r>

	  <r left="AndExpr" length="1">
	    <right>ComparisonExpr</right>
	  </r>

	  <r left="AndExpr" length="3">
	    <right>AndExpr</right>
	    <right>AND</right>
	    <right>ComparisonExpr</right>
	  </r>

	  <r left="ComparisonExpr" length="1">
	    <right>RangeExpr</right>
	  </r>

	  <r left="ComparisonExpr" length="3">
	    <right>RangeExpr</right>
	    <right>ValGenNodeComp</right>
	    <right>RangeExpr</right>
	  </r>

	  <r left="ValGenNodeComp" length="1">
	    <right>ValueComp</right>
	  </r>

	  <r left="ValGenNodeComp" length="1">
	    <right>GeneralComp</right>
	  </r>

	  <r left="ValGenNodeComp" length="1">
	    <right>NodeComp</right>
	  </r>

	  <r left="ValueComp" length="1">
	    <right>EQ</right>
	  </r>

	  <r left="ValueComp" length="1">
	    <right>NE</right>
	  </r>

	  <r left="ValueComp" length="1">
	    <right>LT</right>
	  </r>

	  <r left="ValueComp" length="1">
	    <right>LE</right>
	  </r>

	  <r left="ValueComp" length="1">
	    <right>GT</right>
	  </r>

	  <r left="ValueComp" length="1">
	    <right>GE</right>
	  </r>

	  <r left="GeneralComp" length="1">
	    <right>=</right>
	  </r>

	  <r left="GeneralComp" length="1">
	    <right>!=</right>
	  </r>

	  <r left="GeneralComp" length="1">
	    <right>&lt;</right>
	  </r>

	  <r left="GeneralComp" length="1">
	    <right>&lt;=</right>
	  </r>

	  <r left="GeneralComp" length="1">
	    <right>></right>
	  </r>

	  <r left="GeneralComp" length="1">
	    <right>>=</right>
	  </r>

	  <r left="NodeComp" length="1">
	    <right>IS</right>
	  </r>

	  <r left="NodeComp" length="1">
	    <right>&lt;&lt;</right>
	  </r>

	  <r left="NodeComp" length="1">
	    <right>>></right>
	  </r>

	  <r left="RangeExpr" length="1">
	    <right>AdditiveExpr</right>
	  </r>

	  <r left="RangeExpr" length="3">
	    <right>AdditiveExpr</right>
	    <right>TO</right>
	    <right>AdditiveExpr</right>
	  </r>

	  <r left="AdditiveExpr" length="1">
	    <right>MultiplicativeExpr</right>
	  </r>

	  <r left="AdditiveExpr" length="3">
	    <right>AdditiveExpr</right>
	    <right>Sign</right>
	    <right>MultiplicativeExpr</right>
	  </r>

	  <r left="Sign" length="1">
	    <right>+</right>
	  </r>

	  <r left="Sign" length="1">
	    <right>-</right>
	  </r>

	  <r left="MultiplicativeExpr" length="1">
	    <right>UnionExpr</right>
	  </r>

	  <r left="MultiplicativeExpr" length="3">
	    <right>MultiplicativeExpr</right>
	    <right>MultOper</right>
	    <right>UnionExpr</right>
	  </r>

	  <r left="MultOper" length="1">
	    <right>*</right>
	  </r>

	  <r left="MultOper" length="1">
	    <right>DIV</right>
	  </r>

	  <r left="MultOper" length="1">
	    <right>IDIV</right>
	  </r>

	  <r left="MultOper" length="1">
	    <right>MOD</right>
	  </r>

	  <r left="UnionExpr" length="1">
	    <right>IntersectExceptExpr</right>
	  </r>

	  <r left="UnionExpr" length="3">
	    <right>UnionExpr</right>
	    <right>UNION</right>
	    <right>IntersectExceptExpr</right>
	  </r>

	  <r left="IntersectExceptExpr" length="1">
	    <right>InstanceOfExpr</right>
	  </r>

	  <r left="IntersectExceptExpr" length="3">
	    <right>IntersectExceptExpr</right>
	    <right>IntersectExcept</right>
	    <right>InstanceOfExpr</right>
	  </r>

	  <r left="IntersectExcept" length="1">
	    <right>INTERSECT</right>
	  </r>

	  <r left="IntersectExcept" length="1">
	    <right>EXCEPT</right>
	  </r>

	  <r left="InstanceOfExpr" length="1">
	    <right>TreatExpr</right>
	  </r>

	  <r left="InstanceOfExpr" length="3">
	    <right>TreatExpr</right>
	    <right>INSTANCE_OF</right>
	    <right>SequenceType</right>
	  </r>

	  <r left="TreatExpr" length="1">
	    <right>CastableExpr</right>
	  </r>

	  <r left="TreatExpr" length="3">
	    <right>CastableExpr</right>
	    <right>TREAT_AS</right>
	    <right>SequenceType</right>
	  </r>

	  <r left="CastableExpr" length="1">
	    <right>CastExpr</right>
	  </r>

	  <r left="CastableExpr" length="3">
	    <right>CastExpr</right>
	    <right>CASTABLE_AS</right>
	    <right>SingleType</right>
	  </r>

	  <r left="CastExpr" length="1">
	    <right>UnaryExpr</right>
	  </r>

	  <r left="CastExpr" length="2">
	    <right>CAST_AS</right>
	    <right>SingleType</right>
	  </r>

	  <r left="UnaryExpr" length="1">
	    <right>PathExpr</right>
	  </r>

	  <r left="UnaryExpr" length="2">
	    <right>Sign</right>
	    <right>PathExpr</right>
	  </r>

	  <r left="PathExpr" length="2">
	    <right>/</right>
	    <right>RelativePathExpr</right>
	  </r>

	  <r left="PathExpr" length="1">
	    <right>/</right>
	  </r>

	  <r left="PathExpr" length="2">
	    <right>//</right>
	    <right>RelativePathExpr</right>
	  </r>

	  <r left="PathExpr" length="1">
	    <right>RelativePathExpr</right>
	  </r>

	  <r left="RelativePathExpr" length="1">
	    <right>StepExpr</right>
	  </r>

	  <r left="RelativePathExpr" length="3">
	    <right>RelativePathExpr</right>
	    <right>/</right>
	    <right>StepExpr</right>
	  </r>

	  <r left="RelativePathExpr" length="3">
	    <right>RelativePathExpr</right>
	    <right>//</right>
	    <right>StepExpr</right>
	  </r>

	  <r left="StepExpr" length="1">
	    <right>AxisStep</right>
	  </r>

	  <r left="StepExpr" length="1">
	    <right>FilterExpr</right>
	  </r>

	  <r left="AxisStep" length="2">
	    <right>ForwardStep</right>
	    <right>PredicateList</right>
	  </r>

	  <r left="AxisStep" length="2">
	    <right>ReverseStep</right>
	    <right>PredicateList</right>
	  </r>

	  <r left="FilterExpr" length="2">
	    <right>PrimaryExpr</right>
	    <right>PredicateList</right>
	  </r>

	  <r left="PredicateList" length="0">
	  </r>

	  <r left="PredicateList" length="2">
	    <right>PredicateList</right>
	    <right>Predicate</right>
	  </r>

	  <r left="Predicate" length="3">
	    <right>[</right>
	    <right>Expr</right>
	    <right>]</right>
	  </r>

	  <r left="PrimaryExpr" length="1">
	    <right>Literal</right>
	  </r>

	  <r left="PrimaryExpr" length="1">
	    <right>VariableReference</right>
	  </r>

	  <r left="PrimaryExpr" length="1">
	    <right>ParenthesizedExpr</right>
	  </r>

	  <r left="PrimaryExpr" length="1">
	    <right>ContextItemExpr</right>
	  </r>

	  <r left="PrimaryExpr" length="1">
	    <right>FunctionCall</right>
	  </r>

	  <r left="Literal" length="1">
	    <right>NumericLiteral</right>
	  </r>

	  <r left="Literal" length="1">
	    <right>STRING_LITERAL</right>
	  </r>

	  <r left="NumericLiteral" length="1">
	    <right>INTEGER_LITERAL</right>
	  </r>

	  <r left="NumericLiteral" length="1">
	    <right>DECIMAL_LITERAL</right>
	  </r>

	  <r left="NumericLiteral" length="1">
	    <right>DOUBLE_LITERAL</right>
	  </r>

	  <r left="ParenthesizedExpr" length="3">
	    <right>(</right>
	    <right>Expr</right>
	    <right>)</right>
	  </r>

	  <r left="ParenthesizedExpr" length="2">
	    <right>(</right>
	    <right>)</right>
	  </r>

	  <r left="ContextItemExpr" length="1">
	    <right>.</right>
	  </r>

	  <r left="FunctionCall" length="4">
	    <right>FunctionName</right>
	    <right>(</right>
	    <right>ExprSingleList</right>
	    <right>)</right>
	  </r>

	  <r left="FunctionCall" length="3">
	    <right>FunctionName</right>
	    <right>(</right>
	    <right>)</right>
	  </r>

	  <r left="ExprSingleList" length="1">
	    <right>ExprSingle</right>
	  </r>

	  <r left="ExprSingleList" length="3">
	    <right>ExprSingleList</right>
	    <right>,</right>
	    <right>ExprSingle</right>
	  </r>

	  <r left="FunctionName" length="1">
	    <right>QName</right>
	  </r>

	  <r left="ForwardStep" length="2">
	    <right>ForwardAxis</right>
	    <right>NodeTest</right>
	  </r>

	  <r left="ForwardStep" length="1">
	    <right>AbbrevForwardStep</right>
	  </r>

	  <r left="ReverseStep" length="2">
	    <right>ReverseAxis</right>
	    <right>NodeTest</right>
	  </r>

	  <r left="ReverseStep" length="1">
	    <right>AbbrevReverseStep</right>
	  </r>

	  <r left="AbbrevForwardStep" length="2">
	    <right>@</right>
	    <right>NodeTest</right>
	  </r>

	  <r left="AbbrevForwardStep" length="1">
	    <right>NodeTest</right>
	  </r>

	  <r left="AbbrevReverseStep" length="1">
	    <right>..</right>
	  </r>

	  <r left="ForwardAxis" length="1">
	    <right>CHILD_AXIS</right>
	  </r>

	  <r left="ForwardAxis" length="1">
	    <right>DESCENDANT_AXIS</right>
	  </r>

	  <r left="ForwardAxis" length="1">
	    <right>ATTRIBUTE_AXIS</right>
	  </r>

	  <r left="ForwardAxis" length="1">
	    <right>SELF_AXIS</right>
	  </r>

	  <r left="ForwardAxis" length="1">
	    <right>DESCENDANT_OR_SELF_AXIS</right>
	  </r>

	  <r left="ForwardAxis" length="1">
	    <right>FOLLOWING_SIBLING_AXIS</right>
	  </r>

	  <r left="ForwardAxis" length="1">
	    <right>FOLLOWING_AXIS</right>
	  </r>

	  <r left="ForwardAxis" length="1">
	    <right>NAMESPACE_AXIS</right>
	  </r>

	  <r left="ReverseAxis" length="1">
	    <right>PARENT_AXIS</right>
	  </r>

	  <r left="ReverseAxis" length="1">
	    <right>ANCESTOR_AXIS</right>
	  </r>

	  <r left="ReverseAxis" length="1">
	    <right>PRECEDING_SIBLING_AXIS</right>
	  </r>

	  <r left="ReverseAxis" length="1">
	    <right>PRECEDING_AXIS</right>
	  </r>

	  <r left="ReverseAxis" length="1">
	    <right>ANCESTOR_OR_SELF_AXIS</right>
	  </r>

	  <r left="NodeTest" length="1">
	    <right>KindTest</right>
	  </r>

	  <r left="NodeTest" length="1">
	    <right>NameTest</right>
	  </r>

	  <r left="NameTest" length="1">
	    <right>QName</right>
	  </r>

	  <r left="NameTest" length="1">
	    <right>WildCard</right>
	  </r>

	  <r left="WildCard" length="1">
	    <right>*</right>
	  </r>

	  <r left="WildCard" length="1">
	    <right>WILD_NAME</right>
	  </r>

	  <r left="WildCard" length="1">
	    <right>WILD_PREFIX</right>
	  </r>

	  <r left="SingleType" length="1">
	    <right>AtomicType</right>
	  </r>

	  <r left="SingleType" length="2">
	    <right>AtomicType</right>
	    <right>?</right>
	  </r>

	  <r left="SequenceType" length="3">
	    <right>(</right>
	    <right>ItemType</right>
	    <right>)</right>
	  </r>

	  <r left="SequenceType" length="4">
	    <right>(</right>
	    <right>ItemType</right>
	    <right>OccurenceIndicator</right>
	    <right>)</right>
	  </r>

	  <r left="SequenceType" length="1">
	    <right>EMPTY_TYPE</right>
	  </r>

	  <r left="AtomicType" length="1">
	    <right>QName</right>
	  </r>

	  <r left="ItemType" length="1">
	    <right>AtomicType</right>
	  </r>

	  <r left="ItemType" length="1">
	    <right>KindTest</right>
	  </r>

	  <r left="ItemType" length="1">
	    <right>ITEM_TYPE</right>
	  </r>

	  <r left="OccurenceIndicator" length="1">
	    <right>?</right>
	  </r>

	  <r left="OccurenceIndicator" length="1">
	    <right>*</right>
	  </r>

	  <r left="OccurenceIndicator" length="1">
	    <right>+</right>
	  </r>

	  <r left="KindTest" length="1">
	    <right>DocumentTest</right>
	  </r>

	  <r left="KindTest" length="1">
	    <right>ElementTest</right>
	  </r>

	  <r left="KindTest" length="1">
	    <right>AttributeTest</right>
	  </r>

	  <r left="KindTest" length="1">
	    <right>PITest</right>
	  </r>

	  <r left="KindTest" length="1">
	    <right>CommentTest</right>
	  </r>

	  <r left="KindTest" length="1">
	    <right>TextTest</right>
	  </r>

	  <r left="KindTest" length="1">
	    <right>AnyKindTest</right>
	  </r>

	  <r left="ElementTest" length="1">
	    <right>BasicElementTest</right>
	  </r>

	  <r left="ElementTest" length="1">
	    <right>SchemaElementTest</right>
	  </r>

	  <r left="AttributeTest" length="1">
	    <right>BasicAttributeTest</right>
	  </r>

	  <r left="AttributeTest" length="1">
	    <right>SchemaAttributeTest</right>
	  </r>

	  <r left="BasicElementTest" length="3">
	    <right>ELEMENT_TEST</right>
	    <right>(</right>
	    <right>)</right>
	  </r>

	  <r left="BasicElementTest" length="4">
	    <right>ELEMENT_TEST</right>
	    <right>(</right>
	    <right>ElementNameOrWildCard</right>
	    <right>)</right>
	  </r>

	  <r left="BasicElementTest" length="6">
	    <right>ELEMENT_TEST</right>
	    <right>(</right>
	    <right>ElementNameOrWildCard</right>
	    <right>,</right>
	    <right>TypeName</right>
	    <right>)</right>
	  </r>

	  <r left="BasicElementTest" length="7">
	    <right>ELEMENT_TEST</right>
	    <right>(</right>
	    <right>ElementNameOrWildCard</right>
	    <right>,</right>
	    <right>TypeName</right>
	    <right>?</right>
	    <right>)</right>
	  </r>

	  <r left="BasicAttributeTest" length="3">
	    <right>ATTRIBUTE_TEST</right>
	    <right>(</right>
	    <right>)</right>
	  </r>

	  <r left="BasicAttributeTest" length="4">
	    <right>ATTRIBUTE_TEST</right>
	    <right>(</right>
	    <right>AtttibuteNameOrWildCard</right>
	    <right>)</right>
	  </r>

	  <r left="BasicAttributeTest" length="6">
	    <right>ATTRIBUTE_TEST</right>
	    <right>(</right>
	    <right>AtttibuteNameOrWildCard</right>
	    <right>,</right>
	    <right>TypeName</right>
	    <right>)</right>
	  </r>

	  <r left="ElementNameOrWildCard" length="1">
	    <right>ElementName</right>
	  </r>

	  <r left="ElementNameOrWildCard" length="1">
	    <right>*</right>
	  </r>

	  <r left="AtttibuteNameOrWildCard" length="1">
	    <right>AttributeName</right>
	  </r>

	  <r left="AtttibuteNameOrWildCard" length="1">
	    <right>*</right>
	  </r>

	  <r left="ElementName" length="1">
	    <right>QName</right>
	  </r>

	  <r left="AttributeName" length="1">
	    <right>QName</right>
	  </r>

	  <r left="TypeName" length="1">
	    <right>QName</right>
	  </r>

	  <r left="SchemaElementTest" length="3">
	    <right>SCHEMA_ELEMENT_TEST</right>
	    <right>ElementName</right>
	    <right>)</right>
	  </r>

	  <r left="SchemaAttributeTest" length="3">
	    <right>SCHEMA_ATTRIBUTE_TEST</right>
	    <right>AttributeName</right>
	    <right>)</right>
	  </r>

	  <r left="PITest" length="2">
	    <right>PROCESSING_INSTRUCTION_TEST</right>
	    <right>)</right>
	  </r>

	  <r left="PITest" length="3">
	    <right>PROCESSING_INSTRUCTION_TEST</right>
	    <right>QName</right>
	    <right>)</right>
	  </r>

	  <r left="PITest" length="3">
	    <right>PROCESSING_INSTRUCTION_TEST</right>
	    <right>STRING_LITERAL</right>
	    <right>)</right>
	  </r>

	  <r left="DocumentTest" length="3">
	    <right>DOCUMENT_NODE_TEST</right>
	    <right>(</right>
	    <right>)</right>
	  </r>

	  <r left="DocumentTest" length="4">
	    <right>DOCUMENT_NODE_TEST</right>
	    <right>(</right>
	    <right>ElementTest</right>
	    <right>)</right>
	  </r>

	  <r left="CommentTest" length="1">
	    <right>COMMENT_TEST</right>
	  </r>

	  <r left="TextTest" length="1">
	    <right>TEXT_TEST</right>
	  </r>

	  <r left="AnyKindTest" length="1">
	    <right>NODE_TEST</right>
	  </r>

	  <r left="QName" length="1">
	    <right>QNAME2</right>
	  </r>

	  <r left="QName" length="1">
	    <right>OR</right>
	  </r>

	  <r left="QName" length="1">
	    <right>AND</right>
	  </r>

	  <r left="QName" length="1">
	    <right>EQ</right>
	  </r>

	  <r left="QName" length="1">
	    <right>NE</right>
	  </r>

	  <r left="QName" length="1">
	    <right>LT</right>
	  </r>

	  <r left="QName" length="1">
	    <right>LE</right>
	  </r>

	  <r left="QName" length="1">
	    <right>GT</right>
	  </r>

	  <r left="QName" length="1">
	    <right>GE</right>
	  </r>

	  <r left="QName" length="1">
	    <right>IS</right>
	  </r>

	  <r left="QName" length="1">
	    <right>TO</right>
	  </r>

	  <r left="QName" length="1">
	    <right>DIV</right>
	  </r>

	  <r left="QName" length="1">
	    <right>IDIV</right>
	  </r>

	  <r left="QName" length="1">
	    <right>MOD</right>
	  </r>

	  <r left="QName" length="1">
	    <right>UNION</right>
	  </r>

	  <r left="QName" length="1">
	    <right>INTERSECT</right>
	  </r>

	  <r left="QName" length="1">
	    <right>EXCEPT</right>
	  </r>

	  <r left="QName" length="1">
	    <right>INSTANCE_OF</right>
	  </r>

	  <r left="QName" length="1">
	    <right>CAST_AS</right>
	  </r>

	  <r left="QName" length="1">
	    <right>CASTABLE_AS</right>
	  </r>

	  <r left="QName" length="1">
	    <right>TREAT_AS</right>
	  </r>

	  <r left="QName" length="1">
	    <right>FOR</right>
	  </r>

	  <r left="QName" length="1">
	    <right>SOME</right>
	  </r>

	  <r left="QName" length="1">
	    <right>EVERY</right>
	  </r>

	  <r left="QName" length="1">
	    <right>IF</right>
	  </r>

	  <r left="QName" length="1">
	    <right>THEN</right>
	  </r>

	  <r left="QName" length="1">
	    <right>ELSE</right>
	  </r>

	  <r left="QName" length="1">
	    <right>IN</right>
	  </r>

	  <r left="QName" length="1">
	    <right>RETURN</right>
	  </r>

	  <r left="QName" length="1">
	    <right>SATISFIES</right>
	  </r>

	  <r left="VariableReference" length="2">
	    <right>$</right>
	    <right>QName</right>
	  </r>
	</rules>
<!--
       All actions: (state, TSymb) ==> (sN | rK | acc)
       where 's' = 'shift and 'r' = 'reduce'          
-->
	<actionTable>
	  <state number="0">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="1">
	    <symbol act="r90">.</symbol>
	  </state>
	  <state number="2">
	    <symbol act="r89">.</symbol>
	  </state>
	  <state number="3">
	    <symbol act="r88">.</symbol>
	  </state>
	  <state number="4">
	    <symbol act="r87">.</symbol>
	  </state>
	  <state number="5">
	    <symbol act="r174">.</symbol>
	  </state>
	  <state number="6">
	    <symbol act="r175">.</symbol>
	  </state>
	  <state number="7">
	    <symbol act="r176">.</symbol>
	  </state>
	  <state number="8">
	    <symbol act="r177">.</symbol>
	  </state>
	  <state number="9">
	    <symbol act="r178">.</symbol>
	  </state>
	  <state number="10">
	    <symbol act="r179">.</symbol>
	  </state>
	  <state number="11">
	    <symbol act="r180">.</symbol>
	  </state>
	  <state number="12">
	    <symbol act="r181">.</symbol>
	  </state>
	  <state number="13">
	    <symbol act="r182">.</symbol>
	  </state>
	  <state number="14">
	    <symbol act="r183">.</symbol>
	  </state>
	  <state number="15">
	    <symbol act="r184">.</symbol>
	  </state>
	  <state number="16">
	    <symbol act="r185">.</symbol>
	  </state>
	  <state number="17">
	    <symbol act="r186">.</symbol>
	  </state>
	  <state number="18">
	    <symbol act="r187">.</symbol>
	  </state>
	  <state number="19">
	    <symbol act="r188">.</symbol>
	  </state>
	  <state number="20">
	    <symbol act="r189">.</symbol>
	  </state>
	  <state number="21">
	    <symbol act="r190">.</symbol>
	  </state>
	  <state number="22">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="r191">$end</symbol>
	    <symbol act="r191">,</symbol>
	    <symbol act="r191">&lt;&lt;</symbol>
	    <symbol act="r191">>></symbol>
	    <symbol act="r191">+</symbol>
	    <symbol act="r191">-</symbol>
	    <symbol act="r191">*</symbol>
	    <symbol act="r191">//</symbol>
	    <symbol act="r191">/</symbol>
	    <symbol act="r191">(</symbol>
	    <symbol act="r191">)</symbol>
	    <symbol act="r191">[</symbol>
	    <symbol act="r191">]</symbol>
	    <symbol act="r191">=</symbol>
	    <symbol act="r191">!=</symbol>
	    <symbol act="r191">&lt;</symbol>
	    <symbol act="r191">&lt;=</symbol>
	    <symbol act="r191">></symbol>
	    <symbol act="r191">>=</symbol>
	  </state>
	  <state number="23">
	    <symbol act="r192">.</symbol>
	  </state>
	  <state number="24">
	    <symbol act="r193">.</symbol>
	  </state>
	  <state number="25">
	    <symbol act="s68">$</symbol>
	    <symbol act="r194">$end</symbol>
	    <symbol act="r194">OR</symbol>
	    <symbol act="r194">AND</symbol>
	    <symbol act="r194">EQ</symbol>
	    <symbol act="r194">NE</symbol>
	    <symbol act="r194">LT</symbol>
	    <symbol act="r194">LE</symbol>
	    <symbol act="r194">GT</symbol>
	    <symbol act="r194">GE</symbol>
	    <symbol act="r194">IS</symbol>
	    <symbol act="r194">TO</symbol>
	    <symbol act="r194">DIV</symbol>
	    <symbol act="r194">IDIV</symbol>
	    <symbol act="r194">MOD</symbol>
	    <symbol act="r194">UNION</symbol>
	    <symbol act="r194">INTERSECT</symbol>
	    <symbol act="r194">EXCEPT</symbol>
	    <symbol act="r194">INSTANCE_OF</symbol>
	    <symbol act="r194">CASTABLE_AS</symbol>
	    <symbol act="r194">TREAT_AS</symbol>
	    <symbol act="r194">ELSE</symbol>
	    <symbol act="r194">RETURN</symbol>
	    <symbol act="r194">SATISFIES</symbol>
	    <symbol act="r194">,</symbol>
	    <symbol act="r194">&lt;&lt;</symbol>
	    <symbol act="r194">>></symbol>
	    <symbol act="r194">+</symbol>
	    <symbol act="r194">-</symbol>
	    <symbol act="r194">*</symbol>
	    <symbol act="r194">//</symbol>
	    <symbol act="r194">/</symbol>
	    <symbol act="r194">(</symbol>
	    <symbol act="r194">)</symbol>
	    <symbol act="r194">[</symbol>
	    <symbol act="r194">]</symbol>
	    <symbol act="r194">=</symbol>
	    <symbol act="r194">!=</symbol>
	    <symbol act="r194">&lt;</symbol>
	    <symbol act="r194">&lt;=</symbol>
	    <symbol act="r194">></symbol>
	    <symbol act="r194">>=</symbol>
	  </state>
	  <state number="26">
	    <symbol act="r195">$end</symbol>
	    <symbol act="r195">OR</symbol>
	    <symbol act="r195">AND</symbol>
	    <symbol act="r195">EQ</symbol>
	    <symbol act="r195">NE</symbol>
	    <symbol act="r195">LT</symbol>
	    <symbol act="r195">LE</symbol>
	    <symbol act="r195">GT</symbol>
	    <symbol act="r195">GE</symbol>
	    <symbol act="r195">IS</symbol>
	    <symbol act="r195">TO</symbol>
	    <symbol act="r195">DIV</symbol>
	    <symbol act="r195">IDIV</symbol>
	    <symbol act="r195">MOD</symbol>
	    <symbol act="r195">UNION</symbol>
	    <symbol act="r195">INTERSECT</symbol>
	    <symbol act="r195">EXCEPT</symbol>
	    <symbol act="r195">INSTANCE_OF</symbol>
	    <symbol act="r195">CASTABLE_AS</symbol>
	    <symbol act="r195">TREAT_AS</symbol>
	    <symbol act="r195">ELSE</symbol>
	    <symbol act="r195">RETURN</symbol>
	    <symbol act="r195">SATISFIES</symbol>
	    <symbol act="r195">,</symbol>
	    <symbol act="r195">&lt;&lt;</symbol>
	    <symbol act="r195">>></symbol>
	    <symbol act="r195">+</symbol>
	    <symbol act="r195">-</symbol>
	    <symbol act="r195">*</symbol>
	    <symbol act="r195">//</symbol>
	    <symbol act="r195">/</symbol>
	    <symbol act="r195">(</symbol>
	    <symbol act="r195">)</symbol>
	    <symbol act="r195">[</symbol>
	    <symbol act="r195">]</symbol>
	    <symbol act="r195">=</symbol>
	    <symbol act="r195">!=</symbol>
	    <symbol act="r195">&lt;</symbol>
	    <symbol act="r195">&lt;=</symbol>
	    <symbol act="r195">></symbol>
	    <symbol act="r195">>=</symbol>
	    <symbol act="r11">$</symbol>
	  </state>
	  <state number="27">
	    <symbol act="r196">$end</symbol>
	    <symbol act="r196">OR</symbol>
	    <symbol act="r196">AND</symbol>
	    <symbol act="r196">EQ</symbol>
	    <symbol act="r196">NE</symbol>
	    <symbol act="r196">LT</symbol>
	    <symbol act="r196">LE</symbol>
	    <symbol act="r196">GT</symbol>
	    <symbol act="r196">GE</symbol>
	    <symbol act="r196">IS</symbol>
	    <symbol act="r196">TO</symbol>
	    <symbol act="r196">DIV</symbol>
	    <symbol act="r196">IDIV</symbol>
	    <symbol act="r196">MOD</symbol>
	    <symbol act="r196">UNION</symbol>
	    <symbol act="r196">INTERSECT</symbol>
	    <symbol act="r196">EXCEPT</symbol>
	    <symbol act="r196">INSTANCE_OF</symbol>
	    <symbol act="r196">CASTABLE_AS</symbol>
	    <symbol act="r196">TREAT_AS</symbol>
	    <symbol act="r196">ELSE</symbol>
	    <symbol act="r196">RETURN</symbol>
	    <symbol act="r196">SATISFIES</symbol>
	    <symbol act="r196">,</symbol>
	    <symbol act="r196">&lt;&lt;</symbol>
	    <symbol act="r196">>></symbol>
	    <symbol act="r196">+</symbol>
	    <symbol act="r196">-</symbol>
	    <symbol act="r196">*</symbol>
	    <symbol act="r196">//</symbol>
	    <symbol act="r196">/</symbol>
	    <symbol act="r196">(</symbol>
	    <symbol act="r196">)</symbol>
	    <symbol act="r196">[</symbol>
	    <symbol act="r196">]</symbol>
	    <symbol act="r196">=</symbol>
	    <symbol act="r196">!=</symbol>
	    <symbol act="r196">&lt;</symbol>
	    <symbol act="r196">&lt;=</symbol>
	    <symbol act="r196">></symbol>
	    <symbol act="r196">>=</symbol>
	    <symbol act="r12">$</symbol>
	  </state>
	  <state number="28">
	    <symbol act="s134">(</symbol>
	    <symbol act="r197">$end</symbol>
	    <symbol act="r197">OR</symbol>
	    <symbol act="r197">AND</symbol>
	    <symbol act="r197">EQ</symbol>
	    <symbol act="r197">NE</symbol>
	    <symbol act="r197">LT</symbol>
	    <symbol act="r197">LE</symbol>
	    <symbol act="r197">GT</symbol>
	    <symbol act="r197">GE</symbol>
	    <symbol act="r197">IS</symbol>
	    <symbol act="r197">TO</symbol>
	    <symbol act="r197">DIV</symbol>
	    <symbol act="r197">IDIV</symbol>
	    <symbol act="r197">MOD</symbol>
	    <symbol act="r197">UNION</symbol>
	    <symbol act="r197">INTERSECT</symbol>
	    <symbol act="r197">EXCEPT</symbol>
	    <symbol act="r197">INSTANCE_OF</symbol>
	    <symbol act="r197">CASTABLE_AS</symbol>
	    <symbol act="r197">TREAT_AS</symbol>
	    <symbol act="r197">ELSE</symbol>
	    <symbol act="r197">RETURN</symbol>
	    <symbol act="r197">SATISFIES</symbol>
	    <symbol act="r197">,</symbol>
	    <symbol act="r197">&lt;&lt;</symbol>
	    <symbol act="r197">>></symbol>
	    <symbol act="r197">+</symbol>
	    <symbol act="r197">-</symbol>
	    <symbol act="r197">*</symbol>
	    <symbol act="r197">//</symbol>
	    <symbol act="r197">/</symbol>
	    <symbol act="r197">)</symbol>
	    <symbol act="r197">[</symbol>
	    <symbol act="r197">]</symbol>
	    <symbol act="r197">=</symbol>
	    <symbol act="r197">!=</symbol>
	    <symbol act="r197">&lt;</symbol>
	    <symbol act="r197">&lt;=</symbol>
	    <symbol act="r197">></symbol>
	    <symbol act="r197">>=</symbol>
	  </state>
	  <state number="29">
	    <symbol act="r198">.</symbol>
	  </state>
	  <state number="30">
	    <symbol act="r199">.</symbol>
	  </state>
	  <state number="31">
	    <symbol act="r200">.</symbol>
	  </state>
	  <state number="32">
	    <symbol act="r201">.</symbol>
	  </state>
	  <state number="33">
	    <symbol act="r202">.</symbol>
	  </state>
	  <state number="34">
	    <symbol act="r173">.</symbol>
	  </state>
	  <state number="35">
	    <symbol act="r106">.</symbol>
	  </state>
	  <state number="36">
	    <symbol act="r107">.</symbol>
	  </state>
	  <state number="37">
	    <symbol act="r108">.</symbol>
	  </state>
	  <state number="38">
	    <symbol act="r109">.</symbol>
	  </state>
	  <state number="39">
	    <symbol act="r110">.</symbol>
	  </state>
	  <state number="40">
	    <symbol act="r111">.</symbol>
	  </state>
	  <state number="41">
	    <symbol act="r112">.</symbol>
	  </state>
	  <state number="42">
	    <symbol act="r113">.</symbol>
	  </state>
	  <state number="43">
	    <symbol act="r114">.</symbol>
	  </state>
	  <state number="44">
	    <symbol act="r115">.</symbol>
	  </state>
	  <state number="45">
	    <symbol act="r116">.</symbol>
	  </state>
	  <state number="46">
	    <symbol act="r117">.</symbol>
	  </state>
	  <state number="47">
	    <symbol act="r118">.</symbol>
	  </state>
	  <state number="48">
	    <symbol act="s135">(</symbol>
	  </state>
	  <state number="49">
	    <symbol act="s136">(</symbol>
	  </state>
	  <state number="50">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	  </state>
	  <state number="51">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	  </state>
	  <state number="52">
	    <symbol act="s141">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s142">)</symbol>
	  </state>
	  <state number="53">
	    <symbol act="s144">(</symbol>
	  </state>
	  <state number="54">
	    <symbol act="r170">.</symbol>
	  </state>
	  <state number="55">
	    <symbol act="r172">.</symbol>
	  </state>
	  <state number="56">
	    <symbol act="r171">.</symbol>
	  </state>
	  <state number="57">
	    <symbol act="r124">.</symbol>
	  </state>
	  <state number="58">
	    <symbol act="r125">.</symbol>
	  </state>
	  <state number="59">
	    <symbol act="r42">.</symbol>
	  </state>
	  <state number="60">
	    <symbol act="r43">.</symbol>
	  </state>
	  <state number="61">
	    <symbol act="r123">.</symbol>
	  </state>
	  <state number="62">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="63">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	    <symbol act="r67">$end</symbol>
	    <symbol act="r67">,</symbol>
	    <symbol act="r67">&lt;&lt;</symbol>
	    <symbol act="r67">>></symbol>
	    <symbol act="r67">+</symbol>
	    <symbol act="r67">-</symbol>
	    <symbol act="r67">)</symbol>
	    <symbol act="r67">]</symbol>
	    <symbol act="r67">=</symbol>
	    <symbol act="r67">!=</symbol>
	    <symbol act="r67">&lt;</symbol>
	    <symbol act="r67">&lt;=</symbol>
	    <symbol act="r67">></symbol>
	    <symbol act="r67">>=</symbol>
	  </state>
	  <state number="64">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s147">)</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="65">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s61">*</symbol>
	  </state>
	  <state number="66">
	    <symbol act="r93">.</symbol>
	  </state>
	  <state number="67">
	    <symbol act="r105">.</symbol>
	  </state>
	  <state number="68">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	  </state>
	  <state number="69">
	    <symbol act="s152">,</symbol>
	    <symbol act="acc">$end</symbol>
	  </state>
	  <state number="70">
	    <symbol act="r1">.</symbol>
	  </state>
	  <state number="71">
	    <symbol act="r3">.</symbol>
	  </state>
	  <state number="72">
	    <symbol act="r4">.</symbol>
	  </state>
	  <state number="73">
	    <symbol act="r5">.</symbol>
	  </state>
	  <state number="74">
	    <symbol act="s153">OR</symbol>
	    <symbol act="r6">$end</symbol>
	    <symbol act="r6">ELSE</symbol>
	    <symbol act="r6">RETURN</symbol>
	    <symbol act="r6">SATISFIES</symbol>
	    <symbol act="r6">,</symbol>
	    <symbol act="r6">)</symbol>
	    <symbol act="r6">]</symbol>
	  </state>
	  <state number="75">
	    <symbol act="r82">.</symbol>
	  </state>
	  <state number="76">
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="77">
	    <symbol act="s155">AND</symbol>
	    <symbol act="r14">$end</symbol>
	    <symbol act="r14">OR</symbol>
	    <symbol act="r14">ELSE</symbol>
	    <symbol act="r14">RETURN</symbol>
	    <symbol act="r14">SATISFIES</symbol>
	    <symbol act="r14">,</symbol>
	    <symbol act="r14">)</symbol>
	    <symbol act="r14">]</symbol>
	  </state>
	  <state number="78">
	    <symbol act="r16">.</symbol>
	  </state>
	  <state number="79">
	    <symbol act="s156">EQ</symbol>
	    <symbol act="s157">NE</symbol>
	    <symbol act="s158">LT</symbol>
	    <symbol act="s159">LE</symbol>
	    <symbol act="s160">GT</symbol>
	    <symbol act="s161">GE</symbol>
	    <symbol act="s162">IS</symbol>
	    <symbol act="s163">&lt;&lt;</symbol>
	    <symbol act="s164">>></symbol>
	    <symbol act="s165">=</symbol>
	    <symbol act="s166">!=</symbol>
	    <symbol act="s167">&lt;</symbol>
	    <symbol act="s168">&lt;=</symbol>
	    <symbol act="s169">></symbol>
	    <symbol act="s170">>=</symbol>
	    <symbol act="r18">$end</symbol>
	    <symbol act="r18">OR</symbol>
	    <symbol act="r18">AND</symbol>
	    <symbol act="r18">ELSE</symbol>
	    <symbol act="r18">RETURN</symbol>
	    <symbol act="r18">SATISFIES</symbol>
	    <symbol act="r18">,</symbol>
	    <symbol act="r18">)</symbol>
	    <symbol act="r18">]</symbol>
	  </state>
	  <state number="80">
	    <symbol act="s175">TO</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="r38">$end</symbol>
	    <symbol act="r38">OR</symbol>
	    <symbol act="r38">AND</symbol>
	    <symbol act="r38">EQ</symbol>
	    <symbol act="r38">NE</symbol>
	    <symbol act="r38">LT</symbol>
	    <symbol act="r38">LE</symbol>
	    <symbol act="r38">GT</symbol>
	    <symbol act="r38">GE</symbol>
	    <symbol act="r38">IS</symbol>
	    <symbol act="r38">ELSE</symbol>
	    <symbol act="r38">RETURN</symbol>
	    <symbol act="r38">SATISFIES</symbol>
	    <symbol act="r38">,</symbol>
	    <symbol act="r38">&lt;&lt;</symbol>
	    <symbol act="r38">>></symbol>
	    <symbol act="r38">)</symbol>
	    <symbol act="r38">]</symbol>
	    <symbol act="r38">=</symbol>
	    <symbol act="r38">!=</symbol>
	    <symbol act="r38">&lt;</symbol>
	    <symbol act="r38">&lt;=</symbol>
	    <symbol act="r38">></symbol>
	    <symbol act="r38">>=</symbol>
	  </state>
	  <state number="81">
	    <symbol act="s177">DIV</symbol>
	    <symbol act="s178">IDIV</symbol>
	    <symbol act="s179">MOD</symbol>
	    <symbol act="s180">*</symbol>
	    <symbol act="r40">$end</symbol>
	    <symbol act="r40">OR</symbol>
	    <symbol act="r40">AND</symbol>
	    <symbol act="r40">EQ</symbol>
	    <symbol act="r40">NE</symbol>
	    <symbol act="r40">LT</symbol>
	    <symbol act="r40">LE</symbol>
	    <symbol act="r40">GT</symbol>
	    <symbol act="r40">GE</symbol>
	    <symbol act="r40">IS</symbol>
	    <symbol act="r40">TO</symbol>
	    <symbol act="r40">ELSE</symbol>
	    <symbol act="r40">RETURN</symbol>
	    <symbol act="r40">SATISFIES</symbol>
	    <symbol act="r40">,</symbol>
	    <symbol act="r40">&lt;&lt;</symbol>
	    <symbol act="r40">>></symbol>
	    <symbol act="r40">+</symbol>
	    <symbol act="r40">-</symbol>
	    <symbol act="r40">)</symbol>
	    <symbol act="r40">]</symbol>
	    <symbol act="r40">=</symbol>
	    <symbol act="r40">!=</symbol>
	    <symbol act="r40">&lt;</symbol>
	    <symbol act="r40">&lt;=</symbol>
	    <symbol act="r40">></symbol>
	    <symbol act="r40">>=</symbol>
	  </state>
	  <state number="82">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="83">
	    <symbol act="s183">UNION</symbol>
	    <symbol act="r44">$end</symbol>
	    <symbol act="r44">OR</symbol>
	    <symbol act="r44">AND</symbol>
	    <symbol act="r44">EQ</symbol>
	    <symbol act="r44">NE</symbol>
	    <symbol act="r44">LT</symbol>
	    <symbol act="r44">LE</symbol>
	    <symbol act="r44">GT</symbol>
	    <symbol act="r44">GE</symbol>
	    <symbol act="r44">IS</symbol>
	    <symbol act="r44">TO</symbol>
	    <symbol act="r44">DIV</symbol>
	    <symbol act="r44">IDIV</symbol>
	    <symbol act="r44">MOD</symbol>
	    <symbol act="r44">ELSE</symbol>
	    <symbol act="r44">RETURN</symbol>
	    <symbol act="r44">SATISFIES</symbol>
	    <symbol act="r44">,</symbol>
	    <symbol act="r44">&lt;&lt;</symbol>
	    <symbol act="r44">>></symbol>
	    <symbol act="r44">+</symbol>
	    <symbol act="r44">-</symbol>
	    <symbol act="r44">*</symbol>
	    <symbol act="r44">)</symbol>
	    <symbol act="r44">]</symbol>
	    <symbol act="r44">=</symbol>
	    <symbol act="r44">!=</symbol>
	    <symbol act="r44">&lt;</symbol>
	    <symbol act="r44">&lt;=</symbol>
	    <symbol act="r44">></symbol>
	    <symbol act="r44">>=</symbol>
	  </state>
	  <state number="84">
	    <symbol act="s184">INTERSECT</symbol>
	    <symbol act="s185">EXCEPT</symbol>
	    <symbol act="r50">$end</symbol>
	    <symbol act="r50">OR</symbol>
	    <symbol act="r50">AND</symbol>
	    <symbol act="r50">EQ</symbol>
	    <symbol act="r50">NE</symbol>
	    <symbol act="r50">LT</symbol>
	    <symbol act="r50">LE</symbol>
	    <symbol act="r50">GT</symbol>
	    <symbol act="r50">GE</symbol>
	    <symbol act="r50">IS</symbol>
	    <symbol act="r50">TO</symbol>
	    <symbol act="r50">DIV</symbol>
	    <symbol act="r50">IDIV</symbol>
	    <symbol act="r50">MOD</symbol>
	    <symbol act="r50">UNION</symbol>
	    <symbol act="r50">ELSE</symbol>
	    <symbol act="r50">RETURN</symbol>
	    <symbol act="r50">SATISFIES</symbol>
	    <symbol act="r50">,</symbol>
	    <symbol act="r50">&lt;&lt;</symbol>
	    <symbol act="r50">>></symbol>
	    <symbol act="r50">+</symbol>
	    <symbol act="r50">-</symbol>
	    <symbol act="r50">*</symbol>
	    <symbol act="r50">)</symbol>
	    <symbol act="r50">]</symbol>
	    <symbol act="r50">=</symbol>
	    <symbol act="r50">!=</symbol>
	    <symbol act="r50">&lt;</symbol>
	    <symbol act="r50">&lt;=</symbol>
	    <symbol act="r50">></symbol>
	    <symbol act="r50">>=</symbol>
	  </state>
	  <state number="85">
	    <symbol act="r52">.</symbol>
	  </state>
	  <state number="86">
	    <symbol act="s187">INSTANCE_OF</symbol>
	    <symbol act="r56">$end</symbol>
	    <symbol act="r56">OR</symbol>
	    <symbol act="r56">AND</symbol>
	    <symbol act="r56">EQ</symbol>
	    <symbol act="r56">NE</symbol>
	    <symbol act="r56">LT</symbol>
	    <symbol act="r56">LE</symbol>
	    <symbol act="r56">GT</symbol>
	    <symbol act="r56">GE</symbol>
	    <symbol act="r56">IS</symbol>
	    <symbol act="r56">TO</symbol>
	    <symbol act="r56">DIV</symbol>
	    <symbol act="r56">IDIV</symbol>
	    <symbol act="r56">MOD</symbol>
	    <symbol act="r56">UNION</symbol>
	    <symbol act="r56">INTERSECT</symbol>
	    <symbol act="r56">EXCEPT</symbol>
	    <symbol act="r56">ELSE</symbol>
	    <symbol act="r56">RETURN</symbol>
	    <symbol act="r56">SATISFIES</symbol>
	    <symbol act="r56">,</symbol>
	    <symbol act="r56">&lt;&lt;</symbol>
	    <symbol act="r56">>></symbol>
	    <symbol act="r56">+</symbol>
	    <symbol act="r56">-</symbol>
	    <symbol act="r56">*</symbol>
	    <symbol act="r56">)</symbol>
	    <symbol act="r56">]</symbol>
	    <symbol act="r56">=</symbol>
	    <symbol act="r56">!=</symbol>
	    <symbol act="r56">&lt;</symbol>
	    <symbol act="r56">&lt;=</symbol>
	    <symbol act="r56">></symbol>
	    <symbol act="r56">>=</symbol>
	  </state>
	  <state number="87">
	    <symbol act="s188">TREAT_AS</symbol>
	    <symbol act="r58">$end</symbol>
	    <symbol act="r58">OR</symbol>
	    <symbol act="r58">AND</symbol>
	    <symbol act="r58">EQ</symbol>
	    <symbol act="r58">NE</symbol>
	    <symbol act="r58">LT</symbol>
	    <symbol act="r58">LE</symbol>
	    <symbol act="r58">GT</symbol>
	    <symbol act="r58">GE</symbol>
	    <symbol act="r58">IS</symbol>
	    <symbol act="r58">TO</symbol>
	    <symbol act="r58">DIV</symbol>
	    <symbol act="r58">IDIV</symbol>
	    <symbol act="r58">MOD</symbol>
	    <symbol act="r58">UNION</symbol>
	    <symbol act="r58">INTERSECT</symbol>
	    <symbol act="r58">EXCEPT</symbol>
	    <symbol act="r58">INSTANCE_OF</symbol>
	    <symbol act="r58">ELSE</symbol>
	    <symbol act="r58">RETURN</symbol>
	    <symbol act="r58">SATISFIES</symbol>
	    <symbol act="r58">,</symbol>
	    <symbol act="r58">&lt;&lt;</symbol>
	    <symbol act="r58">>></symbol>
	    <symbol act="r58">+</symbol>
	    <symbol act="r58">-</symbol>
	    <symbol act="r58">*</symbol>
	    <symbol act="r58">)</symbol>
	    <symbol act="r58">]</symbol>
	    <symbol act="r58">=</symbol>
	    <symbol act="r58">!=</symbol>
	    <symbol act="r58">&lt;</symbol>
	    <symbol act="r58">&lt;=</symbol>
	    <symbol act="r58">></symbol>
	    <symbol act="r58">>=</symbol>
	  </state>
	  <state number="88">
	    <symbol act="s189">CASTABLE_AS</symbol>
	    <symbol act="r60">$end</symbol>
	    <symbol act="r60">OR</symbol>
	    <symbol act="r60">AND</symbol>
	    <symbol act="r60">EQ</symbol>
	    <symbol act="r60">NE</symbol>
	    <symbol act="r60">LT</symbol>
	    <symbol act="r60">LE</symbol>
	    <symbol act="r60">GT</symbol>
	    <symbol act="r60">GE</symbol>
	    <symbol act="r60">IS</symbol>
	    <symbol act="r60">TO</symbol>
	    <symbol act="r60">DIV</symbol>
	    <symbol act="r60">IDIV</symbol>
	    <symbol act="r60">MOD</symbol>
	    <symbol act="r60">UNION</symbol>
	    <symbol act="r60">INTERSECT</symbol>
	    <symbol act="r60">EXCEPT</symbol>
	    <symbol act="r60">INSTANCE_OF</symbol>
	    <symbol act="r60">TREAT_AS</symbol>
	    <symbol act="r60">ELSE</symbol>
	    <symbol act="r60">RETURN</symbol>
	    <symbol act="r60">SATISFIES</symbol>
	    <symbol act="r60">,</symbol>
	    <symbol act="r60">&lt;&lt;</symbol>
	    <symbol act="r60">>></symbol>
	    <symbol act="r60">+</symbol>
	    <symbol act="r60">-</symbol>
	    <symbol act="r60">*</symbol>
	    <symbol act="r60">)</symbol>
	    <symbol act="r60">]</symbol>
	    <symbol act="r60">=</symbol>
	    <symbol act="r60">!=</symbol>
	    <symbol act="r60">&lt;</symbol>
	    <symbol act="r60">&lt;=</symbol>
	    <symbol act="r60">></symbol>
	    <symbol act="r60">>=</symbol>
	  </state>
	  <state number="89">
	    <symbol act="r62">.</symbol>
	  </state>
	  <state number="90">
	    <symbol act="r64">.</symbol>
	  </state>
	  <state number="91">
	    <symbol act="s190">//</symbol>
	    <symbol act="s191">/</symbol>
	    <symbol act="r69">$end</symbol>
	    <symbol act="r69">OR</symbol>
	    <symbol act="r69">AND</symbol>
	    <symbol act="r69">EQ</symbol>
	    <symbol act="r69">NE</symbol>
	    <symbol act="r69">LT</symbol>
	    <symbol act="r69">LE</symbol>
	    <symbol act="r69">GT</symbol>
	    <symbol act="r69">GE</symbol>
	    <symbol act="r69">IS</symbol>
	    <symbol act="r69">TO</symbol>
	    <symbol act="r69">DIV</symbol>
	    <symbol act="r69">IDIV</symbol>
	    <symbol act="r69">MOD</symbol>
	    <symbol act="r69">UNION</symbol>
	    <symbol act="r69">INTERSECT</symbol>
	    <symbol act="r69">EXCEPT</symbol>
	    <symbol act="r69">INSTANCE_OF</symbol>
	    <symbol act="r69">CASTABLE_AS</symbol>
	    <symbol act="r69">TREAT_AS</symbol>
	    <symbol act="r69">ELSE</symbol>
	    <symbol act="r69">RETURN</symbol>
	    <symbol act="r69">SATISFIES</symbol>
	    <symbol act="r69">,</symbol>
	    <symbol act="r69">&lt;&lt;</symbol>
	    <symbol act="r69">>></symbol>
	    <symbol act="r69">+</symbol>
	    <symbol act="r69">-</symbol>
	    <symbol act="r69">*</symbol>
	    <symbol act="r69">)</symbol>
	    <symbol act="r69">]</symbol>
	    <symbol act="r69">=</symbol>
	    <symbol act="r69">!=</symbol>
	    <symbol act="r69">&lt;</symbol>
	    <symbol act="r69">&lt;=</symbol>
	    <symbol act="r69">></symbol>
	    <symbol act="r69">>=</symbol>
	  </state>
	  <state number="92">
	    <symbol act="r70">.</symbol>
	  </state>
	  <state number="93">
	    <symbol act="r73">.</symbol>
	  </state>
	  <state number="94">
	    <symbol act="r74">.</symbol>
	  </state>
	  <state number="95">
	    <symbol act="r78">.</symbol>
	  </state>
	  <state number="96">
	    <symbol act="r78">.</symbol>
	  </state>
	  <state number="97">
	    <symbol act="r78">.</symbol>
	  </state>
	  <state number="98">
	    <symbol act="r81">.</symbol>
	  </state>
	  <state number="99">
	    <symbol act="r83">.</symbol>
	  </state>
	  <state number="100">
	    <symbol act="r84">.</symbol>
	  </state>
	  <state number="101">
	    <symbol act="r85">.</symbol>
	  </state>
	  <state number="102">
	    <symbol act="r86">.</symbol>
	  </state>
	  <state number="103">
	    <symbol act="s195">(</symbol>
	  </state>
	  <state number="104">
	    <symbol act="r121">$end</symbol>
	    <symbol act="r121">OR</symbol>
	    <symbol act="r121">AND</symbol>
	    <symbol act="r121">EQ</symbol>
	    <symbol act="r121">NE</symbol>
	    <symbol act="r121">LT</symbol>
	    <symbol act="r121">LE</symbol>
	    <symbol act="r121">GT</symbol>
	    <symbol act="r121">GE</symbol>
	    <symbol act="r121">IS</symbol>
	    <symbol act="r121">TO</symbol>
	    <symbol act="r121">DIV</symbol>
	    <symbol act="r121">IDIV</symbol>
	    <symbol act="r121">MOD</symbol>
	    <symbol act="r121">UNION</symbol>
	    <symbol act="r121">INTERSECT</symbol>
	    <symbol act="r121">EXCEPT</symbol>
	    <symbol act="r121">INSTANCE_OF</symbol>
	    <symbol act="r121">CASTABLE_AS</symbol>
	    <symbol act="r121">TREAT_AS</symbol>
	    <symbol act="r121">ELSE</symbol>
	    <symbol act="r121">RETURN</symbol>
	    <symbol act="r121">SATISFIES</symbol>
	    <symbol act="r121">,</symbol>
	    <symbol act="r121">&lt;&lt;</symbol>
	    <symbol act="r121">>></symbol>
	    <symbol act="r121">+</symbol>
	    <symbol act="r121">-</symbol>
	    <symbol act="r121">*</symbol>
	    <symbol act="r121">//</symbol>
	    <symbol act="r121">/</symbol>
	    <symbol act="r98">(</symbol>
	    <symbol act="r121">)</symbol>
	    <symbol act="r121">[</symbol>
	    <symbol act="r121">]</symbol>
	    <symbol act="r121">=</symbol>
	    <symbol act="r121">!=</symbol>
	    <symbol act="r121">&lt;</symbol>
	    <symbol act="r121">&lt;=</symbol>
	    <symbol act="r121">></symbol>
	    <symbol act="r121">>=</symbol>
	  </state>
	  <state number="105">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s61">*</symbol>
	  </state>
	  <state number="106">
	    <symbol act="r104">.</symbol>
	  </state>
	  <state number="107">
	    <symbol act="r100">.</symbol>
	  </state>
	  <state number="108">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s61">*</symbol>
	  </state>
	  <state number="109">
	    <symbol act="r102">.</symbol>
	  </state>
	  <state number="110">
	    <symbol act="r119">.</symbol>
	  </state>
	  <state number="111">
	    <symbol act="r120">.</symbol>
	  </state>
	  <state number="112">
	    <symbol act="r122">.</symbol>
	  </state>
	  <state number="113">
	    <symbol act="r138">.</symbol>
	  </state>
	  <state number="114">
	    <symbol act="r139">.</symbol>
	  </state>
	  <state number="115">
	    <symbol act="r140">.</symbol>
	  </state>
	  <state number="116">
	    <symbol act="r141">.</symbol>
	  </state>
	  <state number="117">
	    <symbol act="r142">.</symbol>
	  </state>
	  <state number="118">
	    <symbol act="r143">.</symbol>
	  </state>
	  <state number="119">
	    <symbol act="r144">.</symbol>
	  </state>
	  <state number="120">
	    <symbol act="r145">.</symbol>
	  </state>
	  <state number="121">
	    <symbol act="r146">.</symbol>
	  </state>
	  <state number="122">
	    <symbol act="r147">.</symbol>
	  </state>
	  <state number="123">
	    <symbol act="r148">.</symbol>
	  </state>
	  <state number="124">
	    <symbol act="r191">.</symbol>
	  </state>
	  <state number="125">
	    <symbol act="r194">.</symbol>
	  </state>
	  <state number="126">
	    <symbol act="r195">.</symbol>
	  </state>
	  <state number="127">
	    <symbol act="r196">.</symbol>
	  </state>
	  <state number="128">
	    <symbol act="r197">.</symbol>
	  </state>
	  <state number="129">
	    <symbol act="r63">.</symbol>
	  </state>
	  <state number="130">
	    <symbol act="r131">.</symbol>
	  </state>
	  <state number="131">
	    <symbol act="s198">?</symbol>
	    <symbol act="r126">$end</symbol>
	    <symbol act="r126">OR</symbol>
	    <symbol act="r126">AND</symbol>
	    <symbol act="r126">EQ</symbol>
	    <symbol act="r126">NE</symbol>
	    <symbol act="r126">LT</symbol>
	    <symbol act="r126">LE</symbol>
	    <symbol act="r126">GT</symbol>
	    <symbol act="r126">GE</symbol>
	    <symbol act="r126">IS</symbol>
	    <symbol act="r126">TO</symbol>
	    <symbol act="r126">DIV</symbol>
	    <symbol act="r126">IDIV</symbol>
	    <symbol act="r126">MOD</symbol>
	    <symbol act="r126">UNION</symbol>
	    <symbol act="r126">INTERSECT</symbol>
	    <symbol act="r126">EXCEPT</symbol>
	    <symbol act="r126">INSTANCE_OF</symbol>
	    <symbol act="r126">CASTABLE_AS</symbol>
	    <symbol act="r126">TREAT_AS</symbol>
	    <symbol act="r126">ELSE</symbol>
	    <symbol act="r126">RETURN</symbol>
	    <symbol act="r126">SATISFIES</symbol>
	    <symbol act="r126">,</symbol>
	    <symbol act="r126">&lt;&lt;</symbol>
	    <symbol act="r126">>></symbol>
	    <symbol act="r126">+</symbol>
	    <symbol act="r126">-</symbol>
	    <symbol act="r126">*</symbol>
	    <symbol act="r126">)</symbol>
	    <symbol act="r126">]</symbol>
	    <symbol act="r126">=</symbol>
	    <symbol act="r126">!=</symbol>
	    <symbol act="r126">&lt;</symbol>
	    <symbol act="r126">&lt;=</symbol>
	    <symbol act="r126">></symbol>
	    <symbol act="r126">>=</symbol>
	  </state>
	  <state number="132">
	    <symbol act="s199">RETURN</symbol>
	    <symbol act="s200">,</symbol>
	  </state>
	  <state number="133">
	    <symbol act="s201">IN</symbol>
	  </state>
	  <state number="134">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="135">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s203">*</symbol>
	    <symbol act="s204">)</symbol>
	  </state>
	  <state number="136">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s207">*</symbol>
	    <symbol act="s208">)</symbol>
	  </state>
	  <state number="137">
	    <symbol act="r160">.</symbol>
	  </state>
	  <state number="138">
	    <symbol act="s211">)</symbol>
	  </state>
	  <state number="139">
	    <symbol act="r161">.</symbol>
	  </state>
	  <state number="140">
	    <symbol act="s212">)</symbol>
	  </state>
	  <state number="141">
	    <symbol act="s213">)</symbol>
	  </state>
	  <state number="142">
	    <symbol act="r165">.</symbol>
	  </state>
	  <state number="143">
	    <symbol act="s214">)</symbol>
	  </state>
	  <state number="144">
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s215">)</symbol>
	  </state>
	  <state number="145">
	    <symbol act="s190">//</symbol>
	    <symbol act="s191">/</symbol>
	    <symbol act="r68">$end</symbol>
	    <symbol act="r68">OR</symbol>
	    <symbol act="r68">AND</symbol>
	    <symbol act="r68">EQ</symbol>
	    <symbol act="r68">NE</symbol>
	    <symbol act="r68">LT</symbol>
	    <symbol act="r68">LE</symbol>
	    <symbol act="r68">GT</symbol>
	    <symbol act="r68">GE</symbol>
	    <symbol act="r68">IS</symbol>
	    <symbol act="r68">TO</symbol>
	    <symbol act="r68">DIV</symbol>
	    <symbol act="r68">IDIV</symbol>
	    <symbol act="r68">MOD</symbol>
	    <symbol act="r68">UNION</symbol>
	    <symbol act="r68">INTERSECT</symbol>
	    <symbol act="r68">EXCEPT</symbol>
	    <symbol act="r68">INSTANCE_OF</symbol>
	    <symbol act="r68">CASTABLE_AS</symbol>
	    <symbol act="r68">TREAT_AS</symbol>
	    <symbol act="r68">ELSE</symbol>
	    <symbol act="r68">RETURN</symbol>
	    <symbol act="r68">SATISFIES</symbol>
	    <symbol act="r68">,</symbol>
	    <symbol act="r68">&lt;&lt;</symbol>
	    <symbol act="r68">>></symbol>
	    <symbol act="r68">+</symbol>
	    <symbol act="r68">-</symbol>
	    <symbol act="r68">*</symbol>
	    <symbol act="r68">)</symbol>
	    <symbol act="r68">]</symbol>
	    <symbol act="r68">=</symbol>
	    <symbol act="r68">!=</symbol>
	    <symbol act="r68">&lt;</symbol>
	    <symbol act="r68">&lt;=</symbol>
	    <symbol act="r68">></symbol>
	    <symbol act="r68">>=</symbol>
	  </state>
	  <state number="146">
	    <symbol act="s190">//</symbol>
	    <symbol act="s191">/</symbol>
	    <symbol act="r66">$end</symbol>
	    <symbol act="r66">OR</symbol>
	    <symbol act="r66">AND</symbol>
	    <symbol act="r66">EQ</symbol>
	    <symbol act="r66">NE</symbol>
	    <symbol act="r66">LT</symbol>
	    <symbol act="r66">LE</symbol>
	    <symbol act="r66">GT</symbol>
	    <symbol act="r66">GE</symbol>
	    <symbol act="r66">IS</symbol>
	    <symbol act="r66">TO</symbol>
	    <symbol act="r66">DIV</symbol>
	    <symbol act="r66">IDIV</symbol>
	    <symbol act="r66">MOD</symbol>
	    <symbol act="r66">UNION</symbol>
	    <symbol act="r66">INTERSECT</symbol>
	    <symbol act="r66">EXCEPT</symbol>
	    <symbol act="r66">INSTANCE_OF</symbol>
	    <symbol act="r66">CASTABLE_AS</symbol>
	    <symbol act="r66">TREAT_AS</symbol>
	    <symbol act="r66">ELSE</symbol>
	    <symbol act="r66">RETURN</symbol>
	    <symbol act="r66">SATISFIES</symbol>
	    <symbol act="r66">,</symbol>
	    <symbol act="r66">&lt;&lt;</symbol>
	    <symbol act="r66">>></symbol>
	    <symbol act="r66">+</symbol>
	    <symbol act="r66">-</symbol>
	    <symbol act="r66">*</symbol>
	    <symbol act="r66">)</symbol>
	    <symbol act="r66">]</symbol>
	    <symbol act="r66">=</symbol>
	    <symbol act="r66">!=</symbol>
	    <symbol act="r66">&lt;</symbol>
	    <symbol act="r66">&lt;=</symbol>
	    <symbol act="r66">></symbol>
	    <symbol act="r66">>=</symbol>
	  </state>
	  <state number="147">
	    <symbol act="r92">.</symbol>
	  </state>
	  <state number="148">
	    <symbol act="s152">,</symbol>
	    <symbol act="s217">)</symbol>
	  </state>
	  <state number="149">
	    <symbol act="r121">.</symbol>
	  </state>
	  <state number="150">
	    <symbol act="r103">.</symbol>
	  </state>
	  <state number="151">
	    <symbol act="r203">.</symbol>
	  </state>
	  <state number="152">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="153">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="154">
	    <symbol act="s220">SATISFIES</symbol>
	    <symbol act="s200">,</symbol>
	  </state>
	  <state number="155">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="156">
	    <symbol act="r23">.</symbol>
	  </state>
	  <state number="157">
	    <symbol act="r24">.</symbol>
	  </state>
	  <state number="158">
	    <symbol act="r25">.</symbol>
	  </state>
	  <state number="159">
	    <symbol act="r26">.</symbol>
	  </state>
	  <state number="160">
	    <symbol act="r27">.</symbol>
	  </state>
	  <state number="161">
	    <symbol act="r28">.</symbol>
	  </state>
	  <state number="162">
	    <symbol act="r35">.</symbol>
	  </state>
	  <state number="163">
	    <symbol act="r36">.</symbol>
	  </state>
	  <state number="164">
	    <symbol act="r37">.</symbol>
	  </state>
	  <state number="165">
	    <symbol act="r29">.</symbol>
	  </state>
	  <state number="166">
	    <symbol act="r30">.</symbol>
	  </state>
	  <state number="167">
	    <symbol act="r31">.</symbol>
	  </state>
	  <state number="168">
	    <symbol act="r32">.</symbol>
	  </state>
	  <state number="169">
	    <symbol act="r33">.</symbol>
	  </state>
	  <state number="170">
	    <symbol act="r34">.</symbol>
	  </state>
	  <state number="171">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="172">
	    <symbol act="r20">.</symbol>
	  </state>
	  <state number="173">
	    <symbol act="r21">.</symbol>
	  </state>
	  <state number="174">
	    <symbol act="r22">.</symbol>
	  </state>
	  <state number="175">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="176">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="177">
	    <symbol act="r47">.</symbol>
	  </state>
	  <state number="178">
	    <symbol act="r48">.</symbol>
	  </state>
	  <state number="179">
	    <symbol act="r49">.</symbol>
	  </state>
	  <state number="180">
	    <symbol act="r46">.</symbol>
	  </state>
	  <state number="181">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="182">
	    <symbol act="r65">.</symbol>
	  </state>
	  <state number="183">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="184">
	    <symbol act="r54">.</symbol>
	  </state>
	  <state number="185">
	    <symbol act="r55">.</symbol>
	  </state>
	  <state number="186">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="187">
	    <symbol act="s228">EMPTY_TYPE</symbol>
	    <symbol act="s229">(</symbol>
	  </state>
	  <state number="188">
	    <symbol act="s228">EMPTY_TYPE</symbol>
	    <symbol act="s229">(</symbol>
	  </state>
	  <state number="189">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	  </state>
	  <state number="190">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="191">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="192">
	    <symbol act="s235">[</symbol>
	    <symbol act="r75">$end</symbol>
	    <symbol act="r75">OR</symbol>
	    <symbol act="r75">AND</symbol>
	    <symbol act="r75">EQ</symbol>
	    <symbol act="r75">NE</symbol>
	    <symbol act="r75">LT</symbol>
	    <symbol act="r75">LE</symbol>
	    <symbol act="r75">GT</symbol>
	    <symbol act="r75">GE</symbol>
	    <symbol act="r75">IS</symbol>
	    <symbol act="r75">TO</symbol>
	    <symbol act="r75">DIV</symbol>
	    <symbol act="r75">IDIV</symbol>
	    <symbol act="r75">MOD</symbol>
	    <symbol act="r75">UNION</symbol>
	    <symbol act="r75">INTERSECT</symbol>
	    <symbol act="r75">EXCEPT</symbol>
	    <symbol act="r75">INSTANCE_OF</symbol>
	    <symbol act="r75">CASTABLE_AS</symbol>
	    <symbol act="r75">TREAT_AS</symbol>
	    <symbol act="r75">ELSE</symbol>
	    <symbol act="r75">RETURN</symbol>
	    <symbol act="r75">SATISFIES</symbol>
	    <symbol act="r75">,</symbol>
	    <symbol act="r75">&lt;&lt;</symbol>
	    <symbol act="r75">>></symbol>
	    <symbol act="r75">+</symbol>
	    <symbol act="r75">-</symbol>
	    <symbol act="r75">*</symbol>
	    <symbol act="r75">//</symbol>
	    <symbol act="r75">/</symbol>
	    <symbol act="r75">)</symbol>
	    <symbol act="r75">]</symbol>
	    <symbol act="r75">=</symbol>
	    <symbol act="r75">!=</symbol>
	    <symbol act="r75">&lt;</symbol>
	    <symbol act="r75">&lt;=</symbol>
	    <symbol act="r75">></symbol>
	    <symbol act="r75">>=</symbol>
	  </state>
	  <state number="193">
	    <symbol act="s235">[</symbol>
	    <symbol act="r76">$end</symbol>
	    <symbol act="r76">OR</symbol>
	    <symbol act="r76">AND</symbol>
	    <symbol act="r76">EQ</symbol>
	    <symbol act="r76">NE</symbol>
	    <symbol act="r76">LT</symbol>
	    <symbol act="r76">LE</symbol>
	    <symbol act="r76">GT</symbol>
	    <symbol act="r76">GE</symbol>
	    <symbol act="r76">IS</symbol>
	    <symbol act="r76">TO</symbol>
	    <symbol act="r76">DIV</symbol>
	    <symbol act="r76">IDIV</symbol>
	    <symbol act="r76">MOD</symbol>
	    <symbol act="r76">UNION</symbol>
	    <symbol act="r76">INTERSECT</symbol>
	    <symbol act="r76">EXCEPT</symbol>
	    <symbol act="r76">INSTANCE_OF</symbol>
	    <symbol act="r76">CASTABLE_AS</symbol>
	    <symbol act="r76">TREAT_AS</symbol>
	    <symbol act="r76">ELSE</symbol>
	    <symbol act="r76">RETURN</symbol>
	    <symbol act="r76">SATISFIES</symbol>
	    <symbol act="r76">,</symbol>
	    <symbol act="r76">&lt;&lt;</symbol>
	    <symbol act="r76">>></symbol>
	    <symbol act="r76">+</symbol>
	    <symbol act="r76">-</symbol>
	    <symbol act="r76">*</symbol>
	    <symbol act="r76">//</symbol>
	    <symbol act="r76">/</symbol>
	    <symbol act="r76">)</symbol>
	    <symbol act="r76">]</symbol>
	    <symbol act="r76">=</symbol>
	    <symbol act="r76">!=</symbol>
	    <symbol act="r76">&lt;</symbol>
	    <symbol act="r76">&lt;=</symbol>
	    <symbol act="r76">></symbol>
	    <symbol act="r76">>=</symbol>
	  </state>
	  <state number="194">
	    <symbol act="s235">[</symbol>
	    <symbol act="r77">$end</symbol>
	    <symbol act="r77">OR</symbol>
	    <symbol act="r77">AND</symbol>
	    <symbol act="r77">EQ</symbol>
	    <symbol act="r77">NE</symbol>
	    <symbol act="r77">LT</symbol>
	    <symbol act="r77">LE</symbol>
	    <symbol act="r77">GT</symbol>
	    <symbol act="r77">GE</symbol>
	    <symbol act="r77">IS</symbol>
	    <symbol act="r77">TO</symbol>
	    <symbol act="r77">DIV</symbol>
	    <symbol act="r77">IDIV</symbol>
	    <symbol act="r77">MOD</symbol>
	    <symbol act="r77">UNION</symbol>
	    <symbol act="r77">INTERSECT</symbol>
	    <symbol act="r77">EXCEPT</symbol>
	    <symbol act="r77">INSTANCE_OF</symbol>
	    <symbol act="r77">CASTABLE_AS</symbol>
	    <symbol act="r77">TREAT_AS</symbol>
	    <symbol act="r77">ELSE</symbol>
	    <symbol act="r77">RETURN</symbol>
	    <symbol act="r77">SATISFIES</symbol>
	    <symbol act="r77">,</symbol>
	    <symbol act="r77">&lt;&lt;</symbol>
	    <symbol act="r77">>></symbol>
	    <symbol act="r77">+</symbol>
	    <symbol act="r77">-</symbol>
	    <symbol act="r77">*</symbol>
	    <symbol act="r77">//</symbol>
	    <symbol act="r77">/</symbol>
	    <symbol act="r77">)</symbol>
	    <symbol act="r77">]</symbol>
	    <symbol act="r77">=</symbol>
	    <symbol act="r77">!=</symbol>
	    <symbol act="r77">&lt;</symbol>
	    <symbol act="r77">&lt;=</symbol>
	    <symbol act="r77">></symbol>
	    <symbol act="r77">>=</symbol>
	  </state>
	  <state number="195">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s237">)</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="196">
	    <symbol act="r99">.</symbol>
	  </state>
	  <state number="197">
	    <symbol act="r101">.</symbol>
	  </state>
	  <state number="198">
	    <symbol act="r127">.</symbol>
	  </state>
	  <state number="199">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="200">
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="201">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="202">
	    <symbol act="s152">,</symbol>
	    <symbol act="s243">)</symbol>
	  </state>
	  <state number="203">
	    <symbol act="r157">.</symbol>
	  </state>
	  <state number="204">
	    <symbol act="r149">.</symbol>
	  </state>
	  <state number="205">
	    <symbol act="s244">,</symbol>
	    <symbol act="s245">)</symbol>
	  </state>
	  <state number="206">
	    <symbol act="r156">.</symbol>
	  </state>
	  <state number="207">
	    <symbol act="r159">.</symbol>
	  </state>
	  <state number="208">
	    <symbol act="r153">.</symbol>
	  </state>
	  <state number="209">
	    <symbol act="s246">,</symbol>
	    <symbol act="s247">)</symbol>
	  </state>
	  <state number="210">
	    <symbol act="r158">.</symbol>
	  </state>
	  <state number="211">
	    <symbol act="r163">.</symbol>
	  </state>
	  <state number="212">
	    <symbol act="r164">.</symbol>
	  </state>
	  <state number="213">
	    <symbol act="r167">.</symbol>
	  </state>
	  <state number="214">
	    <symbol act="r166">.</symbol>
	  </state>
	  <state number="215">
	    <symbol act="r168">.</symbol>
	  </state>
	  <state number="216">
	    <symbol act="s248">)</symbol>
	  </state>
	  <state number="217">
	    <symbol act="r91">.</symbol>
	  </state>
	  <state number="218">
	    <symbol act="r2">.</symbol>
	  </state>
	  <state number="219">
	    <symbol act="s155">AND</symbol>
	    <symbol act="r15">$end</symbol>
	    <symbol act="r15">OR</symbol>
	    <symbol act="r15">ELSE</symbol>
	    <symbol act="r15">RETURN</symbol>
	    <symbol act="r15">SATISFIES</symbol>
	    <symbol act="r15">,</symbol>
	    <symbol act="r15">)</symbol>
	    <symbol act="r15">]</symbol>
	  </state>
	  <state number="220">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="221">
	    <symbol act="r17">.</symbol>
	  </state>
	  <state number="222">
	    <symbol act="r19">.</symbol>
	  </state>
	  <state number="223">
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="r39">$end</symbol>
	    <symbol act="r39">OR</symbol>
	    <symbol act="r39">AND</symbol>
	    <symbol act="r39">EQ</symbol>
	    <symbol act="r39">NE</symbol>
	    <symbol act="r39">LT</symbol>
	    <symbol act="r39">LE</symbol>
	    <symbol act="r39">GT</symbol>
	    <symbol act="r39">GE</symbol>
	    <symbol act="r39">IS</symbol>
	    <symbol act="r39">ELSE</symbol>
	    <symbol act="r39">RETURN</symbol>
	    <symbol act="r39">SATISFIES</symbol>
	    <symbol act="r39">,</symbol>
	    <symbol act="r39">&lt;&lt;</symbol>
	    <symbol act="r39">>></symbol>
	    <symbol act="r39">)</symbol>
	    <symbol act="r39">]</symbol>
	    <symbol act="r39">=</symbol>
	    <symbol act="r39">!=</symbol>
	    <symbol act="r39">&lt;</symbol>
	    <symbol act="r39">&lt;=</symbol>
	    <symbol act="r39">></symbol>
	    <symbol act="r39">>=</symbol>
	  </state>
	  <state number="224">
	    <symbol act="s177">DIV</symbol>
	    <symbol act="s178">IDIV</symbol>
	    <symbol act="s179">MOD</symbol>
	    <symbol act="s180">*</symbol>
	    <symbol act="r41">$end</symbol>
	    <symbol act="r41">OR</symbol>
	    <symbol act="r41">AND</symbol>
	    <symbol act="r41">EQ</symbol>
	    <symbol act="r41">NE</symbol>
	    <symbol act="r41">LT</symbol>
	    <symbol act="r41">LE</symbol>
	    <symbol act="r41">GT</symbol>
	    <symbol act="r41">GE</symbol>
	    <symbol act="r41">IS</symbol>
	    <symbol act="r41">TO</symbol>
	    <symbol act="r41">ELSE</symbol>
	    <symbol act="r41">RETURN</symbol>
	    <symbol act="r41">SATISFIES</symbol>
	    <symbol act="r41">,</symbol>
	    <symbol act="r41">&lt;&lt;</symbol>
	    <symbol act="r41">>></symbol>
	    <symbol act="r41">+</symbol>
	    <symbol act="r41">-</symbol>
	    <symbol act="r41">)</symbol>
	    <symbol act="r41">]</symbol>
	    <symbol act="r41">=</symbol>
	    <symbol act="r41">!=</symbol>
	    <symbol act="r41">&lt;</symbol>
	    <symbol act="r41">&lt;=</symbol>
	    <symbol act="r41">></symbol>
	    <symbol act="r41">>=</symbol>
	  </state>
	  <state number="225">
	    <symbol act="s183">UNION</symbol>
	    <symbol act="r45">$end</symbol>
	    <symbol act="r45">OR</symbol>
	    <symbol act="r45">AND</symbol>
	    <symbol act="r45">EQ</symbol>
	    <symbol act="r45">NE</symbol>
	    <symbol act="r45">LT</symbol>
	    <symbol act="r45">LE</symbol>
	    <symbol act="r45">GT</symbol>
	    <symbol act="r45">GE</symbol>
	    <symbol act="r45">IS</symbol>
	    <symbol act="r45">TO</symbol>
	    <symbol act="r45">DIV</symbol>
	    <symbol act="r45">IDIV</symbol>
	    <symbol act="r45">MOD</symbol>
	    <symbol act="r45">ELSE</symbol>
	    <symbol act="r45">RETURN</symbol>
	    <symbol act="r45">SATISFIES</symbol>
	    <symbol act="r45">,</symbol>
	    <symbol act="r45">&lt;&lt;</symbol>
	    <symbol act="r45">>></symbol>
	    <symbol act="r45">+</symbol>
	    <symbol act="r45">-</symbol>
	    <symbol act="r45">*</symbol>
	    <symbol act="r45">)</symbol>
	    <symbol act="r45">]</symbol>
	    <symbol act="r45">=</symbol>
	    <symbol act="r45">!=</symbol>
	    <symbol act="r45">&lt;</symbol>
	    <symbol act="r45">&lt;=</symbol>
	    <symbol act="r45">></symbol>
	    <symbol act="r45">>=</symbol>
	  </state>
	  <state number="226">
	    <symbol act="s184">INTERSECT</symbol>
	    <symbol act="s185">EXCEPT</symbol>
	    <symbol act="r51">$end</symbol>
	    <symbol act="r51">OR</symbol>
	    <symbol act="r51">AND</symbol>
	    <symbol act="r51">EQ</symbol>
	    <symbol act="r51">NE</symbol>
	    <symbol act="r51">LT</symbol>
	    <symbol act="r51">LE</symbol>
	    <symbol act="r51">GT</symbol>
	    <symbol act="r51">GE</symbol>
	    <symbol act="r51">IS</symbol>
	    <symbol act="r51">TO</symbol>
	    <symbol act="r51">DIV</symbol>
	    <symbol act="r51">IDIV</symbol>
	    <symbol act="r51">MOD</symbol>
	    <symbol act="r51">UNION</symbol>
	    <symbol act="r51">ELSE</symbol>
	    <symbol act="r51">RETURN</symbol>
	    <symbol act="r51">SATISFIES</symbol>
	    <symbol act="r51">,</symbol>
	    <symbol act="r51">&lt;&lt;</symbol>
	    <symbol act="r51">>></symbol>
	    <symbol act="r51">+</symbol>
	    <symbol act="r51">-</symbol>
	    <symbol act="r51">*</symbol>
	    <symbol act="r51">)</symbol>
	    <symbol act="r51">]</symbol>
	    <symbol act="r51">=</symbol>
	    <symbol act="r51">!=</symbol>
	    <symbol act="r51">&lt;</symbol>
	    <symbol act="r51">&lt;=</symbol>
	    <symbol act="r51">></symbol>
	    <symbol act="r51">>=</symbol>
	  </state>
	  <state number="227">
	    <symbol act="r53">.</symbol>
	  </state>
	  <state number="228">
	    <symbol act="r130">.</symbol>
	  </state>
	  <state number="229">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s250">ITEM_TYPE</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	  </state>
	  <state number="230">
	    <symbol act="r57">.</symbol>
	  </state>
	  <state number="231">
	    <symbol act="r59">.</symbol>
	  </state>
	  <state number="232">
	    <symbol act="r61">.</symbol>
	  </state>
	  <state number="233">
	    <symbol act="r72">.</symbol>
	  </state>
	  <state number="234">
	    <symbol act="r71">.</symbol>
	  </state>
	  <state number="235">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="236">
	    <symbol act="r79">.</symbol>
	  </state>
	  <state number="237">
	    <symbol act="r95">.</symbol>
	  </state>
	  <state number="238">
	    <symbol act="r96">.</symbol>
	  </state>
	  <state number="239">
	    <symbol act="s255">,</symbol>
	    <symbol act="s256">)</symbol>
	  </state>
	  <state number="240">
	    <symbol act="r7">.</symbol>
	  </state>
	  <state number="241">
	    <symbol act="s257">IN</symbol>
	  </state>
	  <state number="242">
	    <symbol act="r8">.</symbol>
	  </state>
	  <state number="243">
	    <symbol act="s258">THEN</symbol>
	  </state>
	  <state number="244">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	  </state>
	  <state number="245">
	    <symbol act="r150">.</symbol>
	  </state>
	  <state number="246">
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s124">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s125">FOR</symbol>
	    <symbol act="s126">SOME</symbol>
	    <symbol act="s127">EVERY</symbol>
	    <symbol act="s128">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	  </state>
	  <state number="247">
	    <symbol act="r154">.</symbol>
	  </state>
	  <state number="248">
	    <symbol act="r169">.</symbol>
	  </state>
	  <state number="249">
	    <symbol act="r10">.</symbol>
	  </state>
	  <state number="250">
	    <symbol act="r134">.</symbol>
	  </state>
	  <state number="251">
	    <symbol act="r133">.</symbol>
	  </state>
	  <state number="252">
	    <symbol act="r132">.</symbol>
	  </state>
	  <state number="253">
	    <symbol act="s262">+</symbol>
	    <symbol act="s263">*</symbol>
	    <symbol act="s264">)</symbol>
	    <symbol act="s265">?</symbol>
	  </state>
	  <state number="254">
	    <symbol act="s152">,</symbol>
	    <symbol act="s267">]</symbol>
	  </state>
	  <state number="255">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="256">
	    <symbol act="r94">.</symbol>
	  </state>
	  <state number="257">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="258">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="259">
	    <symbol act="r162">.</symbol>
	  </state>
	  <state number="260">
	    <symbol act="s271">)</symbol>
	    <symbol act="s272">?</symbol>
	  </state>
	  <state number="261">
	    <symbol act="s273">)</symbol>
	  </state>
	  <state number="262">
	    <symbol act="r137">.</symbol>
	  </state>
	  <state number="263">
	    <symbol act="r136">.</symbol>
	  </state>
	  <state number="264">
	    <symbol act="r128">.</symbol>
	  </state>
	  <state number="265">
	    <symbol act="r135">.</symbol>
	  </state>
	  <state number="266">
	    <symbol act="s274">)</symbol>
	  </state>
	  <state number="267">
	    <symbol act="r80">.</symbol>
	  </state>
	  <state number="268">
	    <symbol act="r97">.</symbol>
	  </state>
	  <state number="269">
	    <symbol act="r9">.</symbol>
	  </state>
	  <state number="270">
	    <symbol act="s275">ELSE</symbol>
	  </state>
	  <state number="271">
	    <symbol act="r151">.</symbol>
	  </state>
	  <state number="272">
	    <symbol act="s276">)</symbol>
	  </state>
	  <state number="273">
	    <symbol act="r155">.</symbol>
	  </state>
	  <state number="274">
	    <symbol act="r129">.</symbol>
	  </state>
	  <state number="275">
	    <symbol act="s1">DOUBLE_LITERAL</symbol>
	    <symbol act="s2">DECIMAL_LITERAL</symbol>
	    <symbol act="s3">INTEGER_LITERAL</symbol>
	    <symbol act="s4">STRING_LITERAL</symbol>
	    <symbol act="s5">OR</symbol>
	    <symbol act="s6">AND</symbol>
	    <symbol act="s7">EQ</symbol>
	    <symbol act="s8">NE</symbol>
	    <symbol act="s9">LT</symbol>
	    <symbol act="s10">LE</symbol>
	    <symbol act="s11">GT</symbol>
	    <symbol act="s12">GE</symbol>
	    <symbol act="s13">IS</symbol>
	    <symbol act="s14">TO</symbol>
	    <symbol act="s15">DIV</symbol>
	    <symbol act="s16">IDIV</symbol>
	    <symbol act="s17">MOD</symbol>
	    <symbol act="s18">UNION</symbol>
	    <symbol act="s19">INTERSECT</symbol>
	    <symbol act="s20">EXCEPT</symbol>
	    <symbol act="s21">INSTANCE_OF</symbol>
	    <symbol act="s22">CAST_AS</symbol>
	    <symbol act="s23">CASTABLE_AS</symbol>
	    <symbol act="s24">TREAT_AS</symbol>
	    <symbol act="s25">FOR</symbol>
	    <symbol act="s26">SOME</symbol>
	    <symbol act="s27">EVERY</symbol>
	    <symbol act="s28">IF</symbol>
	    <symbol act="s29">THEN</symbol>
	    <symbol act="s30">ELSE</symbol>
	    <symbol act="s31">IN</symbol>
	    <symbol act="s32">RETURN</symbol>
	    <symbol act="s33">SATISFIES</symbol>
	    <symbol act="s34">QNAME2</symbol>
	    <symbol act="s35">CHILD_AXIS</symbol>
	    <symbol act="s36">DESCENDANT_AXIS</symbol>
	    <symbol act="s37">ATTRIBUTE_AXIS</symbol>
	    <symbol act="s38">SELF_AXIS</symbol>
	    <symbol act="s39">DESCENDANT_OR_SELF_AXIS</symbol>
	    <symbol act="s40">FOLLOWING_SIBLING_AXIS</symbol>
	    <symbol act="s41">FOLLOWING_AXIS</symbol>
	    <symbol act="s42">NAMESPACE_AXIS</symbol>
	    <symbol act="s43">PARENT_AXIS</symbol>
	    <symbol act="s44">ANCESTOR_AXIS</symbol>
	    <symbol act="s45">PRECEDING_SIBLING_AXIS</symbol>
	    <symbol act="s46">PRECEDING_AXIS</symbol>
	    <symbol act="s47">ANCESTOR_OR_SELF_AXIS</symbol>
	    <symbol act="s48">ELEMENT_TEST</symbol>
	    <symbol act="s49">ATTRIBUTE_TEST</symbol>
	    <symbol act="s50">SCHEMA_ELEMENT_TEST</symbol>
	    <symbol act="s51">SCHEMA_ATTRIBUTE_TEST</symbol>
	    <symbol act="s52">PROCESSING_INSTRUCTION_TEST</symbol>
	    <symbol act="s53">DOCUMENT_NODE_TEST</symbol>
	    <symbol act="s54">COMMENT_TEST</symbol>
	    <symbol act="s55">NODE_TEST</symbol>
	    <symbol act="s56">TEXT_TEST</symbol>
	    <symbol act="s57">WILD_NAME</symbol>
	    <symbol act="s58">WILD_PREFIX</symbol>
	    <symbol act="s59">+</symbol>
	    <symbol act="s60">-</symbol>
	    <symbol act="s61">*</symbol>
	    <symbol act="s62">//</symbol>
	    <symbol act="s63">/</symbol>
	    <symbol act="s64">(</symbol>
	    <symbol act="s65">@</symbol>
	    <symbol act="s66">.</symbol>
	    <symbol act="s67">..</symbol>
	    <symbol act="s68">$</symbol>
	  </state>
	  <state number="276">
	    <symbol act="r152">.</symbol>
	  </state>
	  <state number="277">
	    <symbol act="r13">.</symbol>
	  </state>
	</actionTable>
  <!-- All reductions: (state, NTSymb) ==> ruleN -->
	<gotoTable>
	  <state number="0" NT="Expr" newState="69"/>
	  <state number="0" NT="ExprSingle" newState="70"/>
	  <state number="0" NT="ForExpr" newState="71"/>
	  <state number="0" NT="QuantifiedExpr" newState="72"/>
	  <state number="0" NT="IfExpr" newState="73"/>
	  <state number="0" NT="OrExpr" newState="74"/>
	  <state number="0" NT="VariableReference" newState="75"/>
	  <state number="0" NT="SomeOrEvery" newState="76"/>
	  <state number="0" NT="AndExpr" newState="77"/>
	  <state number="0" NT="ComparisonExpr" newState="78"/>
	  <state number="0" NT="RangeExpr" newState="79"/>
	  <state number="0" NT="AdditiveExpr" newState="80"/>
	  <state number="0" NT="MultiplicativeExpr" newState="81"/>
	  <state number="0" NT="Sign" newState="82"/>
	  <state number="0" NT="UnionExpr" newState="83"/>
	  <state number="0" NT="IntersectExceptExpr" newState="84"/>
	  <state number="0" NT="InstanceOfExpr" newState="85"/>
	  <state number="0" NT="TreatExpr" newState="86"/>
	  <state number="0" NT="CastableExpr" newState="87"/>
	  <state number="0" NT="CastExpr" newState="88"/>
	  <state number="0" NT="UnaryExpr" newState="89"/>
	  <state number="0" NT="PathExpr" newState="90"/>
	  <state number="0" NT="RelativePathExpr" newState="91"/>
	  <state number="0" NT="StepExpr" newState="92"/>
	  <state number="0" NT="AxisStep" newState="93"/>
	  <state number="0" NT="FilterExpr" newState="94"/>
	  <state number="0" NT="ForwardStep" newState="95"/>
	  <state number="0" NT="ReverseStep" newState="96"/>
	  <state number="0" NT="PrimaryExpr" newState="97"/>
	  <state number="0" NT="Literal" newState="98"/>
	  <state number="0" NT="ParenthesizedExpr" newState="99"/>
	  <state number="0" NT="ContextItemExpr" newState="100"/>
	  <state number="0" NT="FunctionCall" newState="101"/>
	  <state number="0" NT="NumericLiteral" newState="102"/>
	  <state number="0" NT="FunctionName" newState="103"/>
	  <state number="0" NT="QName" newState="104"/>
	  <state number="0" NT="ForwardAxis" newState="105"/>
	  <state number="0" NT="NodeTest" newState="106"/>
	  <state number="0" NT="AbbrevForwardStep" newState="107"/>
	  <state number="0" NT="ReverseAxis" newState="108"/>
	  <state number="0" NT="AbbrevReverseStep" newState="109"/>
	  <state number="0" NT="KindTest" newState="110"/>
	  <state number="0" NT="NameTest" newState="111"/>
	  <state number="0" NT="WildCard" newState="112"/>
	  <state number="0" NT="DocumentTest" newState="113"/>
	  <state number="0" NT="ElementTest" newState="114"/>
	  <state number="0" NT="AttributeTest" newState="115"/>
	  <state number="0" NT="PITest" newState="116"/>
	  <state number="0" NT="CommentTest" newState="117"/>
	  <state number="0" NT="TextTest" newState="118"/>
	  <state number="0" NT="AnyKindTest" newState="119"/>
	  <state number="0" NT="BasicElementTest" newState="120"/>
	  <state number="0" NT="SchemaElementTest" newState="121"/>
	  <state number="0" NT="BasicAttributeTest" newState="122"/>
	  <state number="0" NT="SchemaAttributeTest" newState="123"/>
	  <state number="22" NT="SingleType" newState="129"/>
	  <state number="22" NT="QName" newState="130"/>
	  <state number="22" NT="AtomicType" newState="131"/>
	  <state number="25" NT="VarnameList" newState="132"/>
	  <state number="25" NT="VariableReference" newState="133"/>
	  <state number="50" NT="QName" newState="137"/>
	  <state number="50" NT="ElementName" newState="138"/>
	  <state number="51" NT="QName" newState="139"/>
	  <state number="51" NT="AttributeName" newState="140"/>
	  <state number="52" NT="QName" newState="143"/>
	  <state number="62" NT="VariableReference" newState="75"/>
	  <state number="62" NT="RelativePathExpr" newState="145"/>
	  <state number="62" NT="StepExpr" newState="92"/>
	  <state number="62" NT="AxisStep" newState="93"/>
	  <state number="62" NT="FilterExpr" newState="94"/>
	  <state number="62" NT="ForwardStep" newState="95"/>
	  <state number="62" NT="ReverseStep" newState="96"/>
	  <state number="62" NT="PrimaryExpr" newState="97"/>
	  <state number="62" NT="Literal" newState="98"/>
	  <state number="62" NT="ParenthesizedExpr" newState="99"/>
	  <state number="62" NT="ContextItemExpr" newState="100"/>
	  <state number="62" NT="FunctionCall" newState="101"/>
	  <state number="62" NT="NumericLiteral" newState="102"/>
	  <state number="62" NT="FunctionName" newState="103"/>
	  <state number="62" NT="QName" newState="104"/>
	  <state number="62" NT="ForwardAxis" newState="105"/>
	  <state number="62" NT="NodeTest" newState="106"/>
	  <state number="62" NT="AbbrevForwardStep" newState="107"/>
	  <state number="62" NT="ReverseAxis" newState="108"/>
	  <state number="62" NT="AbbrevReverseStep" newState="109"/>
	  <state number="62" NT="KindTest" newState="110"/>
	  <state number="62" NT="NameTest" newState="111"/>
	  <state number="62" NT="WildCard" newState="112"/>
	  <state number="62" NT="DocumentTest" newState="113"/>
	  <state number="62" NT="ElementTest" newState="114"/>
	  <state number="62" NT="AttributeTest" newState="115"/>
	  <state number="62" NT="PITest" newState="116"/>
	  <state number="62" NT="CommentTest" newState="117"/>
	  <state number="62" NT="TextTest" newState="118"/>
	  <state number="62" NT="AnyKindTest" newState="119"/>
	  <state number="62" NT="BasicElementTest" newState="120"/>
	  <state number="62" NT="SchemaElementTest" newState="121"/>
	  <state number="62" NT="BasicAttributeTest" newState="122"/>
	  <state number="62" NT="SchemaAttributeTest" newState="123"/>
	  <state number="63" NT="VariableReference" newState="75"/>
	  <state number="63" NT="RelativePathExpr" newState="146"/>
	  <state number="63" NT="StepExpr" newState="92"/>
	  <state number="63" NT="AxisStep" newState="93"/>
	  <state number="63" NT="FilterExpr" newState="94"/>
	  <state number="63" NT="ForwardStep" newState="95"/>
	  <state number="63" NT="ReverseStep" newState="96"/>
	  <state number="63" NT="PrimaryExpr" newState="97"/>
	  <state number="63" NT="Literal" newState="98"/>
	  <state number="63" NT="ParenthesizedExpr" newState="99"/>
	  <state number="63" NT="ContextItemExpr" newState="100"/>
	  <state number="63" NT="FunctionCall" newState="101"/>
	  <state number="63" NT="NumericLiteral" newState="102"/>
	  <state number="63" NT="FunctionName" newState="103"/>
	  <state number="63" NT="QName" newState="104"/>
	  <state number="63" NT="ForwardAxis" newState="105"/>
	  <state number="63" NT="NodeTest" newState="106"/>
	  <state number="63" NT="AbbrevForwardStep" newState="107"/>
	  <state number="63" NT="ReverseAxis" newState="108"/>
	  <state number="63" NT="AbbrevReverseStep" newState="109"/>
	  <state number="63" NT="KindTest" newState="110"/>
	  <state number="63" NT="NameTest" newState="111"/>
	  <state number="63" NT="WildCard" newState="112"/>
	  <state number="63" NT="DocumentTest" newState="113"/>
	  <state number="63" NT="ElementTest" newState="114"/>
	  <state number="63" NT="AttributeTest" newState="115"/>
	  <state number="63" NT="PITest" newState="116"/>
	  <state number="63" NT="CommentTest" newState="117"/>
	  <state number="63" NT="TextTest" newState="118"/>
	  <state number="63" NT="AnyKindTest" newState="119"/>
	  <state number="63" NT="BasicElementTest" newState="120"/>
	  <state number="63" NT="SchemaElementTest" newState="121"/>
	  <state number="63" NT="BasicAttributeTest" newState="122"/>
	  <state number="63" NT="SchemaAttributeTest" newState="123"/>
	  <state number="64" NT="Expr" newState="148"/>
	  <state number="64" NT="ExprSingle" newState="70"/>
	  <state number="64" NT="ForExpr" newState="71"/>
	  <state number="64" NT="QuantifiedExpr" newState="72"/>
	  <state number="64" NT="IfExpr" newState="73"/>
	  <state number="64" NT="OrExpr" newState="74"/>
	  <state number="64" NT="VariableReference" newState="75"/>
	  <state number="64" NT="SomeOrEvery" newState="76"/>
	  <state number="64" NT="AndExpr" newState="77"/>
	  <state number="64" NT="ComparisonExpr" newState="78"/>
	  <state number="64" NT="RangeExpr" newState="79"/>
	  <state number="64" NT="AdditiveExpr" newState="80"/>
	  <state number="64" NT="MultiplicativeExpr" newState="81"/>
	  <state number="64" NT="Sign" newState="82"/>
	  <state number="64" NT="UnionExpr" newState="83"/>
	  <state number="64" NT="IntersectExceptExpr" newState="84"/>
	  <state number="64" NT="InstanceOfExpr" newState="85"/>
	  <state number="64" NT="TreatExpr" newState="86"/>
	  <state number="64" NT="CastableExpr" newState="87"/>
	  <state number="64" NT="CastExpr" newState="88"/>
	  <state number="64" NT="UnaryExpr" newState="89"/>
	  <state number="64" NT="PathExpr" newState="90"/>
	  <state number="64" NT="RelativePathExpr" newState="91"/>
	  <state number="64" NT="StepExpr" newState="92"/>
	  <state number="64" NT="AxisStep" newState="93"/>
	  <state number="64" NT="FilterExpr" newState="94"/>
	  <state number="64" NT="ForwardStep" newState="95"/>
	  <state number="64" NT="ReverseStep" newState="96"/>
	  <state number="64" NT="PrimaryExpr" newState="97"/>
	  <state number="64" NT="Literal" newState="98"/>
	  <state number="64" NT="ParenthesizedExpr" newState="99"/>
	  <state number="64" NT="ContextItemExpr" newState="100"/>
	  <state number="64" NT="FunctionCall" newState="101"/>
	  <state number="64" NT="NumericLiteral" newState="102"/>
	  <state number="64" NT="FunctionName" newState="103"/>
	  <state number="64" NT="QName" newState="104"/>
	  <state number="64" NT="ForwardAxis" newState="105"/>
	  <state number="64" NT="NodeTest" newState="106"/>
	  <state number="64" NT="AbbrevForwardStep" newState="107"/>
	  <state number="64" NT="ReverseAxis" newState="108"/>
	  <state number="64" NT="AbbrevReverseStep" newState="109"/>
	  <state number="64" NT="KindTest" newState="110"/>
	  <state number="64" NT="NameTest" newState="111"/>
	  <state number="64" NT="WildCard" newState="112"/>
	  <state number="64" NT="DocumentTest" newState="113"/>
	  <state number="64" NT="ElementTest" newState="114"/>
	  <state number="64" NT="AttributeTest" newState="115"/>
	  <state number="64" NT="PITest" newState="116"/>
	  <state number="64" NT="CommentTest" newState="117"/>
	  <state number="64" NT="TextTest" newState="118"/>
	  <state number="64" NT="AnyKindTest" newState="119"/>
	  <state number="64" NT="BasicElementTest" newState="120"/>
	  <state number="64" NT="SchemaElementTest" newState="121"/>
	  <state number="64" NT="BasicAttributeTest" newState="122"/>
	  <state number="64" NT="SchemaAttributeTest" newState="123"/>
	  <state number="65" NT="QName" newState="149"/>
	  <state number="65" NT="NodeTest" newState="150"/>
	  <state number="65" NT="KindTest" newState="110"/>
	  <state number="65" NT="NameTest" newState="111"/>
	  <state number="65" NT="WildCard" newState="112"/>
	  <state number="65" NT="DocumentTest" newState="113"/>
	  <state number="65" NT="ElementTest" newState="114"/>
	  <state number="65" NT="AttributeTest" newState="115"/>
	  <state number="65" NT="PITest" newState="116"/>
	  <state number="65" NT="CommentTest" newState="117"/>
	  <state number="65" NT="TextTest" newState="118"/>
	  <state number="65" NT="AnyKindTest" newState="119"/>
	  <state number="65" NT="BasicElementTest" newState="120"/>
	  <state number="65" NT="SchemaElementTest" newState="121"/>
	  <state number="65" NT="BasicAttributeTest" newState="122"/>
	  <state number="65" NT="SchemaAttributeTest" newState="123"/>
	  <state number="68" NT="QName" newState="151"/>
	  <state number="76" NT="VarnameList" newState="154"/>
	  <state number="76" NT="VariableReference" newState="133"/>
	  <state number="79" NT="ValGenNodeComp" newState="171"/>
	  <state number="79" NT="ValueComp" newState="172"/>
	  <state number="79" NT="GeneralComp" newState="173"/>
	  <state number="79" NT="NodeComp" newState="174"/>
	  <state number="80" NT="Sign" newState="176"/>
	  <state number="81" NT="MultOper" newState="181"/>
	  <state number="82" NT="VariableReference" newState="75"/>
	  <state number="82" NT="PathExpr" newState="182"/>
	  <state number="82" NT="RelativePathExpr" newState="91"/>
	  <state number="82" NT="StepExpr" newState="92"/>
	  <state number="82" NT="AxisStep" newState="93"/>
	  <state number="82" NT="FilterExpr" newState="94"/>
	  <state number="82" NT="ForwardStep" newState="95"/>
	  <state number="82" NT="ReverseStep" newState="96"/>
	  <state number="82" NT="PrimaryExpr" newState="97"/>
	  <state number="82" NT="Literal" newState="98"/>
	  <state number="82" NT="ParenthesizedExpr" newState="99"/>
	  <state number="82" NT="ContextItemExpr" newState="100"/>
	  <state number="82" NT="FunctionCall" newState="101"/>
	  <state number="82" NT="NumericLiteral" newState="102"/>
	  <state number="82" NT="FunctionName" newState="103"/>
	  <state number="82" NT="QName" newState="104"/>
	  <state number="82" NT="ForwardAxis" newState="105"/>
	  <state number="82" NT="NodeTest" newState="106"/>
	  <state number="82" NT="AbbrevForwardStep" newState="107"/>
	  <state number="82" NT="ReverseAxis" newState="108"/>
	  <state number="82" NT="AbbrevReverseStep" newState="109"/>
	  <state number="82" NT="KindTest" newState="110"/>
	  <state number="82" NT="NameTest" newState="111"/>
	  <state number="82" NT="WildCard" newState="112"/>
	  <state number="82" NT="DocumentTest" newState="113"/>
	  <state number="82" NT="ElementTest" newState="114"/>
	  <state number="82" NT="AttributeTest" newState="115"/>
	  <state number="82" NT="PITest" newState="116"/>
	  <state number="82" NT="CommentTest" newState="117"/>
	  <state number="82" NT="TextTest" newState="118"/>
	  <state number="82" NT="AnyKindTest" newState="119"/>
	  <state number="82" NT="BasicElementTest" newState="120"/>
	  <state number="82" NT="SchemaElementTest" newState="121"/>
	  <state number="82" NT="BasicAttributeTest" newState="122"/>
	  <state number="82" NT="SchemaAttributeTest" newState="123"/>
	  <state number="84" NT="IntersectExcept" newState="186"/>
	  <state number="95" NT="PredicateList" newState="192"/>
	  <state number="96" NT="PredicateList" newState="193"/>
	  <state number="97" NT="PredicateList" newState="194"/>
	  <state number="105" NT="QName" newState="149"/>
	  <state number="105" NT="NodeTest" newState="196"/>
	  <state number="105" NT="KindTest" newState="110"/>
	  <state number="105" NT="NameTest" newState="111"/>
	  <state number="105" NT="WildCard" newState="112"/>
	  <state number="105" NT="DocumentTest" newState="113"/>
	  <state number="105" NT="ElementTest" newState="114"/>
	  <state number="105" NT="AttributeTest" newState="115"/>
	  <state number="105" NT="PITest" newState="116"/>
	  <state number="105" NT="CommentTest" newState="117"/>
	  <state number="105" NT="TextTest" newState="118"/>
	  <state number="105" NT="AnyKindTest" newState="119"/>
	  <state number="105" NT="BasicElementTest" newState="120"/>
	  <state number="105" NT="SchemaElementTest" newState="121"/>
	  <state number="105" NT="BasicAttributeTest" newState="122"/>
	  <state number="105" NT="SchemaAttributeTest" newState="123"/>
	  <state number="108" NT="QName" newState="149"/>
	  <state number="108" NT="NodeTest" newState="197"/>
	  <state number="108" NT="KindTest" newState="110"/>
	  <state number="108" NT="NameTest" newState="111"/>
	  <state number="108" NT="WildCard" newState="112"/>
	  <state number="108" NT="DocumentTest" newState="113"/>
	  <state number="108" NT="ElementTest" newState="114"/>
	  <state number="108" NT="AttributeTest" newState="115"/>
	  <state number="108" NT="PITest" newState="116"/>
	  <state number="108" NT="CommentTest" newState="117"/>
	  <state number="108" NT="TextTest" newState="118"/>
	  <state number="108" NT="AnyKindTest" newState="119"/>
	  <state number="108" NT="BasicElementTest" newState="120"/>
	  <state number="108" NT="SchemaElementTest" newState="121"/>
	  <state number="108" NT="BasicAttributeTest" newState="122"/>
	  <state number="108" NT="SchemaAttributeTest" newState="123"/>
	  <state number="134" NT="Expr" newState="202"/>
	  <state number="134" NT="ExprSingle" newState="70"/>
	  <state number="134" NT="ForExpr" newState="71"/>
	  <state number="134" NT="QuantifiedExpr" newState="72"/>
	  <state number="134" NT="IfExpr" newState="73"/>
	  <state number="134" NT="OrExpr" newState="74"/>
	  <state number="134" NT="VariableReference" newState="75"/>
	  <state number="134" NT="SomeOrEvery" newState="76"/>
	  <state number="134" NT="AndExpr" newState="77"/>
	  <state number="134" NT="ComparisonExpr" newState="78"/>
	  <state number="134" NT="RangeExpr" newState="79"/>
	  <state number="134" NT="AdditiveExpr" newState="80"/>
	  <state number="134" NT="MultiplicativeExpr" newState="81"/>
	  <state number="134" NT="Sign" newState="82"/>
	  <state number="134" NT="UnionExpr" newState="83"/>
	  <state number="134" NT="IntersectExceptExpr" newState="84"/>
	  <state number="134" NT="InstanceOfExpr" newState="85"/>
	  <state number="134" NT="TreatExpr" newState="86"/>
	  <state number="134" NT="CastableExpr" newState="87"/>
	  <state number="134" NT="CastExpr" newState="88"/>
	  <state number="134" NT="UnaryExpr" newState="89"/>
	  <state number="134" NT="PathExpr" newState="90"/>
	  <state number="134" NT="RelativePathExpr" newState="91"/>
	  <state number="134" NT="StepExpr" newState="92"/>
	  <state number="134" NT="AxisStep" newState="93"/>
	  <state number="134" NT="FilterExpr" newState="94"/>
	  <state number="134" NT="ForwardStep" newState="95"/>
	  <state number="134" NT="ReverseStep" newState="96"/>
	  <state number="134" NT="PrimaryExpr" newState="97"/>
	  <state number="134" NT="Literal" newState="98"/>
	  <state number="134" NT="ParenthesizedExpr" newState="99"/>
	  <state number="134" NT="ContextItemExpr" newState="100"/>
	  <state number="134" NT="FunctionCall" newState="101"/>
	  <state number="134" NT="NumericLiteral" newState="102"/>
	  <state number="134" NT="FunctionName" newState="103"/>
	  <state number="134" NT="QName" newState="104"/>
	  <state number="134" NT="ForwardAxis" newState="105"/>
	  <state number="134" NT="NodeTest" newState="106"/>
	  <state number="134" NT="AbbrevForwardStep" newState="107"/>
	  <state number="134" NT="ReverseAxis" newState="108"/>
	  <state number="134" NT="AbbrevReverseStep" newState="109"/>
	  <state number="134" NT="KindTest" newState="110"/>
	  <state number="134" NT="NameTest" newState="111"/>
	  <state number="134" NT="WildCard" newState="112"/>
	  <state number="134" NT="DocumentTest" newState="113"/>
	  <state number="134" NT="ElementTest" newState="114"/>
	  <state number="134" NT="AttributeTest" newState="115"/>
	  <state number="134" NT="PITest" newState="116"/>
	  <state number="134" NT="CommentTest" newState="117"/>
	  <state number="134" NT="TextTest" newState="118"/>
	  <state number="134" NT="AnyKindTest" newState="119"/>
	  <state number="134" NT="BasicElementTest" newState="120"/>
	  <state number="134" NT="SchemaElementTest" newState="121"/>
	  <state number="134" NT="BasicAttributeTest" newState="122"/>
	  <state number="134" NT="SchemaAttributeTest" newState="123"/>
	  <state number="135" NT="QName" newState="137"/>
	  <state number="135" NT="ElementNameOrWildCard" newState="205"/>
	  <state number="135" NT="ElementName" newState="206"/>
	  <state number="136" NT="QName" newState="139"/>
	  <state number="136" NT="AtttibuteNameOrWildCard" newState="209"/>
	  <state number="136" NT="AttributeName" newState="210"/>
	  <state number="144" NT="ElementTest" newState="216"/>
	  <state number="144" NT="BasicElementTest" newState="120"/>
	  <state number="144" NT="SchemaElementTest" newState="121"/>
	  <state number="152" NT="ExprSingle" newState="218"/>
	  <state number="152" NT="ForExpr" newState="71"/>
	  <state number="152" NT="QuantifiedExpr" newState="72"/>
	  <state number="152" NT="IfExpr" newState="73"/>
	  <state number="152" NT="OrExpr" newState="74"/>
	  <state number="152" NT="VariableReference" newState="75"/>
	  <state number="152" NT="SomeOrEvery" newState="76"/>
	  <state number="152" NT="AndExpr" newState="77"/>
	  <state number="152" NT="ComparisonExpr" newState="78"/>
	  <state number="152" NT="RangeExpr" newState="79"/>
	  <state number="152" NT="AdditiveExpr" newState="80"/>
	  <state number="152" NT="MultiplicativeExpr" newState="81"/>
	  <state number="152" NT="Sign" newState="82"/>
	  <state number="152" NT="UnionExpr" newState="83"/>
	  <state number="152" NT="IntersectExceptExpr" newState="84"/>
	  <state number="152" NT="InstanceOfExpr" newState="85"/>
	  <state number="152" NT="TreatExpr" newState="86"/>
	  <state number="152" NT="CastableExpr" newState="87"/>
	  <state number="152" NT="CastExpr" newState="88"/>
	  <state number="152" NT="UnaryExpr" newState="89"/>
	  <state number="152" NT="PathExpr" newState="90"/>
	  <state number="152" NT="RelativePathExpr" newState="91"/>
	  <state number="152" NT="StepExpr" newState="92"/>
	  <state number="152" NT="AxisStep" newState="93"/>
	  <state number="152" NT="FilterExpr" newState="94"/>
	  <state number="152" NT="ForwardStep" newState="95"/>
	  <state number="152" NT="ReverseStep" newState="96"/>
	  <state number="152" NT="PrimaryExpr" newState="97"/>
	  <state number="152" NT="Literal" newState="98"/>
	  <state number="152" NT="ParenthesizedExpr" newState="99"/>
	  <state number="152" NT="ContextItemExpr" newState="100"/>
	  <state number="152" NT="FunctionCall" newState="101"/>
	  <state number="152" NT="NumericLiteral" newState="102"/>
	  <state number="152" NT="FunctionName" newState="103"/>
	  <state number="152" NT="QName" newState="104"/>
	  <state number="152" NT="ForwardAxis" newState="105"/>
	  <state number="152" NT="NodeTest" newState="106"/>
	  <state number="152" NT="AbbrevForwardStep" newState="107"/>
	  <state number="152" NT="ReverseAxis" newState="108"/>
	  <state number="152" NT="AbbrevReverseStep" newState="109"/>
	  <state number="152" NT="KindTest" newState="110"/>
	  <state number="152" NT="NameTest" newState="111"/>
	  <state number="152" NT="WildCard" newState="112"/>
	  <state number="152" NT="DocumentTest" newState="113"/>
	  <state number="152" NT="ElementTest" newState="114"/>
	  <state number="152" NT="AttributeTest" newState="115"/>
	  <state number="152" NT="PITest" newState="116"/>
	  <state number="152" NT="CommentTest" newState="117"/>
	  <state number="152" NT="TextTest" newState="118"/>
	  <state number="152" NT="AnyKindTest" newState="119"/>
	  <state number="152" NT="BasicElementTest" newState="120"/>
	  <state number="152" NT="SchemaElementTest" newState="121"/>
	  <state number="152" NT="BasicAttributeTest" newState="122"/>
	  <state number="152" NT="SchemaAttributeTest" newState="123"/>
	  <state number="153" NT="VariableReference" newState="75"/>
	  <state number="153" NT="AndExpr" newState="219"/>
	  <state number="153" NT="ComparisonExpr" newState="78"/>
	  <state number="153" NT="RangeExpr" newState="79"/>
	  <state number="153" NT="AdditiveExpr" newState="80"/>
	  <state number="153" NT="MultiplicativeExpr" newState="81"/>
	  <state number="153" NT="Sign" newState="82"/>
	  <state number="153" NT="UnionExpr" newState="83"/>
	  <state number="153" NT="IntersectExceptExpr" newState="84"/>
	  <state number="153" NT="InstanceOfExpr" newState="85"/>
	  <state number="153" NT="TreatExpr" newState="86"/>
	  <state number="153" NT="CastableExpr" newState="87"/>
	  <state number="153" NT="CastExpr" newState="88"/>
	  <state number="153" NT="UnaryExpr" newState="89"/>
	  <state number="153" NT="PathExpr" newState="90"/>
	  <state number="153" NT="RelativePathExpr" newState="91"/>
	  <state number="153" NT="StepExpr" newState="92"/>
	  <state number="153" NT="AxisStep" newState="93"/>
	  <state number="153" NT="FilterExpr" newState="94"/>
	  <state number="153" NT="ForwardStep" newState="95"/>
	  <state number="153" NT="ReverseStep" newState="96"/>
	  <state number="153" NT="PrimaryExpr" newState="97"/>
	  <state number="153" NT="Literal" newState="98"/>
	  <state number="153" NT="ParenthesizedExpr" newState="99"/>
	  <state number="153" NT="ContextItemExpr" newState="100"/>
	  <state number="153" NT="FunctionCall" newState="101"/>
	  <state number="153" NT="NumericLiteral" newState="102"/>
	  <state number="153" NT="FunctionName" newState="103"/>
	  <state number="153" NT="QName" newState="104"/>
	  <state number="153" NT="ForwardAxis" newState="105"/>
	  <state number="153" NT="NodeTest" newState="106"/>
	  <state number="153" NT="AbbrevForwardStep" newState="107"/>
	  <state number="153" NT="ReverseAxis" newState="108"/>
	  <state number="153" NT="AbbrevReverseStep" newState="109"/>
	  <state number="153" NT="KindTest" newState="110"/>
	  <state number="153" NT="NameTest" newState="111"/>
	  <state number="153" NT="WildCard" newState="112"/>
	  <state number="153" NT="DocumentTest" newState="113"/>
	  <state number="153" NT="ElementTest" newState="114"/>
	  <state number="153" NT="AttributeTest" newState="115"/>
	  <state number="153" NT="PITest" newState="116"/>
	  <state number="153" NT="CommentTest" newState="117"/>
	  <state number="153" NT="TextTest" newState="118"/>
	  <state number="153" NT="AnyKindTest" newState="119"/>
	  <state number="153" NT="BasicElementTest" newState="120"/>
	  <state number="153" NT="SchemaElementTest" newState="121"/>
	  <state number="153" NT="BasicAttributeTest" newState="122"/>
	  <state number="153" NT="SchemaAttributeTest" newState="123"/>
	  <state number="155" NT="VariableReference" newState="75"/>
	  <state number="155" NT="ComparisonExpr" newState="221"/>
	  <state number="155" NT="RangeExpr" newState="79"/>
	  <state number="155" NT="AdditiveExpr" newState="80"/>
	  <state number="155" NT="MultiplicativeExpr" newState="81"/>
	  <state number="155" NT="Sign" newState="82"/>
	  <state number="155" NT="UnionExpr" newState="83"/>
	  <state number="155" NT="IntersectExceptExpr" newState="84"/>
	  <state number="155" NT="InstanceOfExpr" newState="85"/>
	  <state number="155" NT="TreatExpr" newState="86"/>
	  <state number="155" NT="CastableExpr" newState="87"/>
	  <state number="155" NT="CastExpr" newState="88"/>
	  <state number="155" NT="UnaryExpr" newState="89"/>
	  <state number="155" NT="PathExpr" newState="90"/>
	  <state number="155" NT="RelativePathExpr" newState="91"/>
	  <state number="155" NT="StepExpr" newState="92"/>
	  <state number="155" NT="AxisStep" newState="93"/>
	  <state number="155" NT="FilterExpr" newState="94"/>
	  <state number="155" NT="ForwardStep" newState="95"/>
	  <state number="155" NT="ReverseStep" newState="96"/>
	  <state number="155" NT="PrimaryExpr" newState="97"/>
	  <state number="155" NT="Literal" newState="98"/>
	  <state number="155" NT="ParenthesizedExpr" newState="99"/>
	  <state number="155" NT="ContextItemExpr" newState="100"/>
	  <state number="155" NT="FunctionCall" newState="101"/>
	  <state number="155" NT="NumericLiteral" newState="102"/>
	  <state number="155" NT="FunctionName" newState="103"/>
	  <state number="155" NT="QName" newState="104"/>
	  <state number="155" NT="ForwardAxis" newState="105"/>
	  <state number="155" NT="NodeTest" newState="106"/>
	  <state number="155" NT="AbbrevForwardStep" newState="107"/>
	  <state number="155" NT="ReverseAxis" newState="108"/>
	  <state number="155" NT="AbbrevReverseStep" newState="109"/>
	  <state number="155" NT="KindTest" newState="110"/>
	  <state number="155" NT="NameTest" newState="111"/>
	  <state number="155" NT="WildCard" newState="112"/>
	  <state number="155" NT="DocumentTest" newState="113"/>
	  <state number="155" NT="ElementTest" newState="114"/>
	  <state number="155" NT="AttributeTest" newState="115"/>
	  <state number="155" NT="PITest" newState="116"/>
	  <state number="155" NT="CommentTest" newState="117"/>
	  <state number="155" NT="TextTest" newState="118"/>
	  <state number="155" NT="AnyKindTest" newState="119"/>
	  <state number="155" NT="BasicElementTest" newState="120"/>
	  <state number="155" NT="SchemaElementTest" newState="121"/>
	  <state number="155" NT="BasicAttributeTest" newState="122"/>
	  <state number="155" NT="SchemaAttributeTest" newState="123"/>
	  <state number="171" NT="VariableReference" newState="75"/>
	  <state number="171" NT="RangeExpr" newState="222"/>
	  <state number="171" NT="AdditiveExpr" newState="80"/>
	  <state number="171" NT="MultiplicativeExpr" newState="81"/>
	  <state number="171" NT="Sign" newState="82"/>
	  <state number="171" NT="UnionExpr" newState="83"/>
	  <state number="171" NT="IntersectExceptExpr" newState="84"/>
	  <state number="171" NT="InstanceOfExpr" newState="85"/>
	  <state number="171" NT="TreatExpr" newState="86"/>
	  <state number="171" NT="CastableExpr" newState="87"/>
	  <state number="171" NT="CastExpr" newState="88"/>
	  <state number="171" NT="UnaryExpr" newState="89"/>
	  <state number="171" NT="PathExpr" newState="90"/>
	  <state number="171" NT="RelativePathExpr" newState="91"/>
	  <state number="171" NT="StepExpr" newState="92"/>
	  <state number="171" NT="AxisStep" newState="93"/>
	  <state number="171" NT="FilterExpr" newState="94"/>
	  <state number="171" NT="ForwardStep" newState="95"/>
	  <state number="171" NT="ReverseStep" newState="96"/>
	  <state number="171" NT="PrimaryExpr" newState="97"/>
	  <state number="171" NT="Literal" newState="98"/>
	  <state number="171" NT="ParenthesizedExpr" newState="99"/>
	  <state number="171" NT="ContextItemExpr" newState="100"/>
	  <state number="171" NT="FunctionCall" newState="101"/>
	  <state number="171" NT="NumericLiteral" newState="102"/>
	  <state number="171" NT="FunctionName" newState="103"/>
	  <state number="171" NT="QName" newState="104"/>
	  <state number="171" NT="ForwardAxis" newState="105"/>
	  <state number="171" NT="NodeTest" newState="106"/>
	  <state number="171" NT="AbbrevForwardStep" newState="107"/>
	  <state number="171" NT="ReverseAxis" newState="108"/>
	  <state number="171" NT="AbbrevReverseStep" newState="109"/>
	  <state number="171" NT="KindTest" newState="110"/>
	  <state number="171" NT="NameTest" newState="111"/>
	  <state number="171" NT="WildCard" newState="112"/>
	  <state number="171" NT="DocumentTest" newState="113"/>
	  <state number="171" NT="ElementTest" newState="114"/>
	  <state number="171" NT="AttributeTest" newState="115"/>
	  <state number="171" NT="PITest" newState="116"/>
	  <state number="171" NT="CommentTest" newState="117"/>
	  <state number="171" NT="TextTest" newState="118"/>
	  <state number="171" NT="AnyKindTest" newState="119"/>
	  <state number="171" NT="BasicElementTest" newState="120"/>
	  <state number="171" NT="SchemaElementTest" newState="121"/>
	  <state number="171" NT="BasicAttributeTest" newState="122"/>
	  <state number="171" NT="SchemaAttributeTest" newState="123"/>
	  <state number="175" NT="VariableReference" newState="75"/>
	  <state number="175" NT="AdditiveExpr" newState="223"/>
	  <state number="175" NT="MultiplicativeExpr" newState="81"/>
	  <state number="175" NT="Sign" newState="82"/>
	  <state number="175" NT="UnionExpr" newState="83"/>
	  <state number="175" NT="IntersectExceptExpr" newState="84"/>
	  <state number="175" NT="InstanceOfExpr" newState="85"/>
	  <state number="175" NT="TreatExpr" newState="86"/>
	  <state number="175" NT="CastableExpr" newState="87"/>
	  <state number="175" NT="CastExpr" newState="88"/>
	  <state number="175" NT="UnaryExpr" newState="89"/>
	  <state number="175" NT="PathExpr" newState="90"/>
	  <state number="175" NT="RelativePathExpr" newState="91"/>
	  <state number="175" NT="StepExpr" newState="92"/>
	  <state number="175" NT="AxisStep" newState="93"/>
	  <state number="175" NT="FilterExpr" newState="94"/>
	  <state number="175" NT="ForwardStep" newState="95"/>
	  <state number="175" NT="ReverseStep" newState="96"/>
	  <state number="175" NT="PrimaryExpr" newState="97"/>
	  <state number="175" NT="Literal" newState="98"/>
	  <state number="175" NT="ParenthesizedExpr" newState="99"/>
	  <state number="175" NT="ContextItemExpr" newState="100"/>
	  <state number="175" NT="FunctionCall" newState="101"/>
	  <state number="175" NT="NumericLiteral" newState="102"/>
	  <state number="175" NT="FunctionName" newState="103"/>
	  <state number="175" NT="QName" newState="104"/>
	  <state number="175" NT="ForwardAxis" newState="105"/>
	  <state number="175" NT="NodeTest" newState="106"/>
	  <state number="175" NT="AbbrevForwardStep" newState="107"/>
	  <state number="175" NT="ReverseAxis" newState="108"/>
	  <state number="175" NT="AbbrevReverseStep" newState="109"/>
	  <state number="175" NT="KindTest" newState="110"/>
	  <state number="175" NT="NameTest" newState="111"/>
	  <state number="175" NT="WildCard" newState="112"/>
	  <state number="175" NT="DocumentTest" newState="113"/>
	  <state number="175" NT="ElementTest" newState="114"/>
	  <state number="175" NT="AttributeTest" newState="115"/>
	  <state number="175" NT="PITest" newState="116"/>
	  <state number="175" NT="CommentTest" newState="117"/>
	  <state number="175" NT="TextTest" newState="118"/>
	  <state number="175" NT="AnyKindTest" newState="119"/>
	  <state number="175" NT="BasicElementTest" newState="120"/>
	  <state number="175" NT="SchemaElementTest" newState="121"/>
	  <state number="175" NT="BasicAttributeTest" newState="122"/>
	  <state number="175" NT="SchemaAttributeTest" newState="123"/>
	  <state number="176" NT="VariableReference" newState="75"/>
	  <state number="176" NT="MultiplicativeExpr" newState="224"/>
	  <state number="176" NT="Sign" newState="82"/>
	  <state number="176" NT="UnionExpr" newState="83"/>
	  <state number="176" NT="IntersectExceptExpr" newState="84"/>
	  <state number="176" NT="InstanceOfExpr" newState="85"/>
	  <state number="176" NT="TreatExpr" newState="86"/>
	  <state number="176" NT="CastableExpr" newState="87"/>
	  <state number="176" NT="CastExpr" newState="88"/>
	  <state number="176" NT="UnaryExpr" newState="89"/>
	  <state number="176" NT="PathExpr" newState="90"/>
	  <state number="176" NT="RelativePathExpr" newState="91"/>
	  <state number="176" NT="StepExpr" newState="92"/>
	  <state number="176" NT="AxisStep" newState="93"/>
	  <state number="176" NT="FilterExpr" newState="94"/>
	  <state number="176" NT="ForwardStep" newState="95"/>
	  <state number="176" NT="ReverseStep" newState="96"/>
	  <state number="176" NT="PrimaryExpr" newState="97"/>
	  <state number="176" NT="Literal" newState="98"/>
	  <state number="176" NT="ParenthesizedExpr" newState="99"/>
	  <state number="176" NT="ContextItemExpr" newState="100"/>
	  <state number="176" NT="FunctionCall" newState="101"/>
	  <state number="176" NT="NumericLiteral" newState="102"/>
	  <state number="176" NT="FunctionName" newState="103"/>
	  <state number="176" NT="QName" newState="104"/>
	  <state number="176" NT="ForwardAxis" newState="105"/>
	  <state number="176" NT="NodeTest" newState="106"/>
	  <state number="176" NT="AbbrevForwardStep" newState="107"/>
	  <state number="176" NT="ReverseAxis" newState="108"/>
	  <state number="176" NT="AbbrevReverseStep" newState="109"/>
	  <state number="176" NT="KindTest" newState="110"/>
	  <state number="176" NT="NameTest" newState="111"/>
	  <state number="176" NT="WildCard" newState="112"/>
	  <state number="176" NT="DocumentTest" newState="113"/>
	  <state number="176" NT="ElementTest" newState="114"/>
	  <state number="176" NT="AttributeTest" newState="115"/>
	  <state number="176" NT="PITest" newState="116"/>
	  <state number="176" NT="CommentTest" newState="117"/>
	  <state number="176" NT="TextTest" newState="118"/>
	  <state number="176" NT="AnyKindTest" newState="119"/>
	  <state number="176" NT="BasicElementTest" newState="120"/>
	  <state number="176" NT="SchemaElementTest" newState="121"/>
	  <state number="176" NT="BasicAttributeTest" newState="122"/>
	  <state number="176" NT="SchemaAttributeTest" newState="123"/>
	  <state number="181" NT="VariableReference" newState="75"/>
	  <state number="181" NT="Sign" newState="82"/>
	  <state number="181" NT="UnionExpr" newState="225"/>
	  <state number="181" NT="IntersectExceptExpr" newState="84"/>
	  <state number="181" NT="InstanceOfExpr" newState="85"/>
	  <state number="181" NT="TreatExpr" newState="86"/>
	  <state number="181" NT="CastableExpr" newState="87"/>
	  <state number="181" NT="CastExpr" newState="88"/>
	  <state number="181" NT="UnaryExpr" newState="89"/>
	  <state number="181" NT="PathExpr" newState="90"/>
	  <state number="181" NT="RelativePathExpr" newState="91"/>
	  <state number="181" NT="StepExpr" newState="92"/>
	  <state number="181" NT="AxisStep" newState="93"/>
	  <state number="181" NT="FilterExpr" newState="94"/>
	  <state number="181" NT="ForwardStep" newState="95"/>
	  <state number="181" NT="ReverseStep" newState="96"/>
	  <state number="181" NT="PrimaryExpr" newState="97"/>
	  <state number="181" NT="Literal" newState="98"/>
	  <state number="181" NT="ParenthesizedExpr" newState="99"/>
	  <state number="181" NT="ContextItemExpr" newState="100"/>
	  <state number="181" NT="FunctionCall" newState="101"/>
	  <state number="181" NT="NumericLiteral" newState="102"/>
	  <state number="181" NT="FunctionName" newState="103"/>
	  <state number="181" NT="QName" newState="104"/>
	  <state number="181" NT="ForwardAxis" newState="105"/>
	  <state number="181" NT="NodeTest" newState="106"/>
	  <state number="181" NT="AbbrevForwardStep" newState="107"/>
	  <state number="181" NT="ReverseAxis" newState="108"/>
	  <state number="181" NT="AbbrevReverseStep" newState="109"/>
	  <state number="181" NT="KindTest" newState="110"/>
	  <state number="181" NT="NameTest" newState="111"/>
	  <state number="181" NT="WildCard" newState="112"/>
	  <state number="181" NT="DocumentTest" newState="113"/>
	  <state number="181" NT="ElementTest" newState="114"/>
	  <state number="181" NT="AttributeTest" newState="115"/>
	  <state number="181" NT="PITest" newState="116"/>
	  <state number="181" NT="CommentTest" newState="117"/>
	  <state number="181" NT="TextTest" newState="118"/>
	  <state number="181" NT="AnyKindTest" newState="119"/>
	  <state number="181" NT="BasicElementTest" newState="120"/>
	  <state number="181" NT="SchemaElementTest" newState="121"/>
	  <state number="181" NT="BasicAttributeTest" newState="122"/>
	  <state number="181" NT="SchemaAttributeTest" newState="123"/>
	  <state number="183" NT="VariableReference" newState="75"/>
	  <state number="183" NT="Sign" newState="82"/>
	  <state number="183" NT="IntersectExceptExpr" newState="226"/>
	  <state number="183" NT="InstanceOfExpr" newState="85"/>
	  <state number="183" NT="TreatExpr" newState="86"/>
	  <state number="183" NT="CastableExpr" newState="87"/>
	  <state number="183" NT="CastExpr" newState="88"/>
	  <state number="183" NT="UnaryExpr" newState="89"/>
	  <state number="183" NT="PathExpr" newState="90"/>
	  <state number="183" NT="RelativePathExpr" newState="91"/>
	  <state number="183" NT="StepExpr" newState="92"/>
	  <state number="183" NT="AxisStep" newState="93"/>
	  <state number="183" NT="FilterExpr" newState="94"/>
	  <state number="183" NT="ForwardStep" newState="95"/>
	  <state number="183" NT="ReverseStep" newState="96"/>
	  <state number="183" NT="PrimaryExpr" newState="97"/>
	  <state number="183" NT="Literal" newState="98"/>
	  <state number="183" NT="ParenthesizedExpr" newState="99"/>
	  <state number="183" NT="ContextItemExpr" newState="100"/>
	  <state number="183" NT="FunctionCall" newState="101"/>
	  <state number="183" NT="NumericLiteral" newState="102"/>
	  <state number="183" NT="FunctionName" newState="103"/>
	  <state number="183" NT="QName" newState="104"/>
	  <state number="183" NT="ForwardAxis" newState="105"/>
	  <state number="183" NT="NodeTest" newState="106"/>
	  <state number="183" NT="AbbrevForwardStep" newState="107"/>
	  <state number="183" NT="ReverseAxis" newState="108"/>
	  <state number="183" NT="AbbrevReverseStep" newState="109"/>
	  <state number="183" NT="KindTest" newState="110"/>
	  <state number="183" NT="NameTest" newState="111"/>
	  <state number="183" NT="WildCard" newState="112"/>
	  <state number="183" NT="DocumentTest" newState="113"/>
	  <state number="183" NT="ElementTest" newState="114"/>
	  <state number="183" NT="AttributeTest" newState="115"/>
	  <state number="183" NT="PITest" newState="116"/>
	  <state number="183" NT="CommentTest" newState="117"/>
	  <state number="183" NT="TextTest" newState="118"/>
	  <state number="183" NT="AnyKindTest" newState="119"/>
	  <state number="183" NT="BasicElementTest" newState="120"/>
	  <state number="183" NT="SchemaElementTest" newState="121"/>
	  <state number="183" NT="BasicAttributeTest" newState="122"/>
	  <state number="183" NT="SchemaAttributeTest" newState="123"/>
	  <state number="186" NT="VariableReference" newState="75"/>
	  <state number="186" NT="Sign" newState="82"/>
	  <state number="186" NT="InstanceOfExpr" newState="227"/>
	  <state number="186" NT="TreatExpr" newState="86"/>
	  <state number="186" NT="CastableExpr" newState="87"/>
	  <state number="186" NT="CastExpr" newState="88"/>
	  <state number="186" NT="UnaryExpr" newState="89"/>
	  <state number="186" NT="PathExpr" newState="90"/>
	  <state number="186" NT="RelativePathExpr" newState="91"/>
	  <state number="186" NT="StepExpr" newState="92"/>
	  <state number="186" NT="AxisStep" newState="93"/>
	  <state number="186" NT="FilterExpr" newState="94"/>
	  <state number="186" NT="ForwardStep" newState="95"/>
	  <state number="186" NT="ReverseStep" newState="96"/>
	  <state number="186" NT="PrimaryExpr" newState="97"/>
	  <state number="186" NT="Literal" newState="98"/>
	  <state number="186" NT="ParenthesizedExpr" newState="99"/>
	  <state number="186" NT="ContextItemExpr" newState="100"/>
	  <state number="186" NT="FunctionCall" newState="101"/>
	  <state number="186" NT="NumericLiteral" newState="102"/>
	  <state number="186" NT="FunctionName" newState="103"/>
	  <state number="186" NT="QName" newState="104"/>
	  <state number="186" NT="ForwardAxis" newState="105"/>
	  <state number="186" NT="NodeTest" newState="106"/>
	  <state number="186" NT="AbbrevForwardStep" newState="107"/>
	  <state number="186" NT="ReverseAxis" newState="108"/>
	  <state number="186" NT="AbbrevReverseStep" newState="109"/>
	  <state number="186" NT="KindTest" newState="110"/>
	  <state number="186" NT="NameTest" newState="111"/>
	  <state number="186" NT="WildCard" newState="112"/>
	  <state number="186" NT="DocumentTest" newState="113"/>
	  <state number="186" NT="ElementTest" newState="114"/>
	  <state number="186" NT="AttributeTest" newState="115"/>
	  <state number="186" NT="PITest" newState="116"/>
	  <state number="186" NT="CommentTest" newState="117"/>
	  <state number="186" NT="TextTest" newState="118"/>
	  <state number="186" NT="AnyKindTest" newState="119"/>
	  <state number="186" NT="BasicElementTest" newState="120"/>
	  <state number="186" NT="SchemaElementTest" newState="121"/>
	  <state number="186" NT="BasicAttributeTest" newState="122"/>
	  <state number="186" NT="SchemaAttributeTest" newState="123"/>
	  <state number="187" NT="SequenceType" newState="230"/>
	  <state number="188" NT="SequenceType" newState="231"/>
	  <state number="189" NT="SingleType" newState="232"/>
	  <state number="189" NT="QName" newState="130"/>
	  <state number="189" NT="AtomicType" newState="131"/>
	  <state number="190" NT="VariableReference" newState="75"/>
	  <state number="190" NT="StepExpr" newState="233"/>
	  <state number="190" NT="AxisStep" newState="93"/>
	  <state number="190" NT="FilterExpr" newState="94"/>
	  <state number="190" NT="ForwardStep" newState="95"/>
	  <state number="190" NT="ReverseStep" newState="96"/>
	  <state number="190" NT="PrimaryExpr" newState="97"/>
	  <state number="190" NT="Literal" newState="98"/>
	  <state number="190" NT="ParenthesizedExpr" newState="99"/>
	  <state number="190" NT="ContextItemExpr" newState="100"/>
	  <state number="190" NT="FunctionCall" newState="101"/>
	  <state number="190" NT="NumericLiteral" newState="102"/>
	  <state number="190" NT="FunctionName" newState="103"/>
	  <state number="190" NT="QName" newState="104"/>
	  <state number="190" NT="ForwardAxis" newState="105"/>
	  <state number="190" NT="NodeTest" newState="106"/>
	  <state number="190" NT="AbbrevForwardStep" newState="107"/>
	  <state number="190" NT="ReverseAxis" newState="108"/>
	  <state number="190" NT="AbbrevReverseStep" newState="109"/>
	  <state number="190" NT="KindTest" newState="110"/>
	  <state number="190" NT="NameTest" newState="111"/>
	  <state number="190" NT="WildCard" newState="112"/>
	  <state number="190" NT="DocumentTest" newState="113"/>
	  <state number="190" NT="ElementTest" newState="114"/>
	  <state number="190" NT="AttributeTest" newState="115"/>
	  <state number="190" NT="PITest" newState="116"/>
	  <state number="190" NT="CommentTest" newState="117"/>
	  <state number="190" NT="TextTest" newState="118"/>
	  <state number="190" NT="AnyKindTest" newState="119"/>
	  <state number="190" NT="BasicElementTest" newState="120"/>
	  <state number="190" NT="SchemaElementTest" newState="121"/>
	  <state number="190" NT="BasicAttributeTest" newState="122"/>
	  <state number="190" NT="SchemaAttributeTest" newState="123"/>
	  <state number="191" NT="VariableReference" newState="75"/>
	  <state number="191" NT="StepExpr" newState="234"/>
	  <state number="191" NT="AxisStep" newState="93"/>
	  <state number="191" NT="FilterExpr" newState="94"/>
	  <state number="191" NT="ForwardStep" newState="95"/>
	  <state number="191" NT="ReverseStep" newState="96"/>
	  <state number="191" NT="PrimaryExpr" newState="97"/>
	  <state number="191" NT="Literal" newState="98"/>
	  <state number="191" NT="ParenthesizedExpr" newState="99"/>
	  <state number="191" NT="ContextItemExpr" newState="100"/>
	  <state number="191" NT="FunctionCall" newState="101"/>
	  <state number="191" NT="NumericLiteral" newState="102"/>
	  <state number="191" NT="FunctionName" newState="103"/>
	  <state number="191" NT="QName" newState="104"/>
	  <state number="191" NT="ForwardAxis" newState="105"/>
	  <state number="191" NT="NodeTest" newState="106"/>
	  <state number="191" NT="AbbrevForwardStep" newState="107"/>
	  <state number="191" NT="ReverseAxis" newState="108"/>
	  <state number="191" NT="AbbrevReverseStep" newState="109"/>
	  <state number="191" NT="KindTest" newState="110"/>
	  <state number="191" NT="NameTest" newState="111"/>
	  <state number="191" NT="WildCard" newState="112"/>
	  <state number="191" NT="DocumentTest" newState="113"/>
	  <state number="191" NT="ElementTest" newState="114"/>
	  <state number="191" NT="AttributeTest" newState="115"/>
	  <state number="191" NT="PITest" newState="116"/>
	  <state number="191" NT="CommentTest" newState="117"/>
	  <state number="191" NT="TextTest" newState="118"/>
	  <state number="191" NT="AnyKindTest" newState="119"/>
	  <state number="191" NT="BasicElementTest" newState="120"/>
	  <state number="191" NT="SchemaElementTest" newState="121"/>
	  <state number="191" NT="BasicAttributeTest" newState="122"/>
	  <state number="191" NT="SchemaAttributeTest" newState="123"/>
	  <state number="192" NT="Predicate" newState="236"/>
	  <state number="193" NT="Predicate" newState="236"/>
	  <state number="194" NT="Predicate" newState="236"/>
	  <state number="195" NT="ExprSingle" newState="238"/>
	  <state number="195" NT="ForExpr" newState="71"/>
	  <state number="195" NT="QuantifiedExpr" newState="72"/>
	  <state number="195" NT="IfExpr" newState="73"/>
	  <state number="195" NT="OrExpr" newState="74"/>
	  <state number="195" NT="VariableReference" newState="75"/>
	  <state number="195" NT="SomeOrEvery" newState="76"/>
	  <state number="195" NT="AndExpr" newState="77"/>
	  <state number="195" NT="ComparisonExpr" newState="78"/>
	  <state number="195" NT="RangeExpr" newState="79"/>
	  <state number="195" NT="AdditiveExpr" newState="80"/>
	  <state number="195" NT="MultiplicativeExpr" newState="81"/>
	  <state number="195" NT="Sign" newState="82"/>
	  <state number="195" NT="UnionExpr" newState="83"/>
	  <state number="195" NT="IntersectExceptExpr" newState="84"/>
	  <state number="195" NT="InstanceOfExpr" newState="85"/>
	  <state number="195" NT="TreatExpr" newState="86"/>
	  <state number="195" NT="CastableExpr" newState="87"/>
	  <state number="195" NT="CastExpr" newState="88"/>
	  <state number="195" NT="UnaryExpr" newState="89"/>
	  <state number="195" NT="PathExpr" newState="90"/>
	  <state number="195" NT="RelativePathExpr" newState="91"/>
	  <state number="195" NT="StepExpr" newState="92"/>
	  <state number="195" NT="AxisStep" newState="93"/>
	  <state number="195" NT="FilterExpr" newState="94"/>
	  <state number="195" NT="ForwardStep" newState="95"/>
	  <state number="195" NT="ReverseStep" newState="96"/>
	  <state number="195" NT="PrimaryExpr" newState="97"/>
	  <state number="195" NT="Literal" newState="98"/>
	  <state number="195" NT="ParenthesizedExpr" newState="99"/>
	  <state number="195" NT="ContextItemExpr" newState="100"/>
	  <state number="195" NT="FunctionCall" newState="101"/>
	  <state number="195" NT="NumericLiteral" newState="102"/>
	  <state number="195" NT="FunctionName" newState="103"/>
	  <state number="195" NT="ExprSingleList" newState="239"/>
	  <state number="195" NT="QName" newState="104"/>
	  <state number="195" NT="ForwardAxis" newState="105"/>
	  <state number="195" NT="NodeTest" newState="106"/>
	  <state number="195" NT="AbbrevForwardStep" newState="107"/>
	  <state number="195" NT="ReverseAxis" newState="108"/>
	  <state number="195" NT="AbbrevReverseStep" newState="109"/>
	  <state number="195" NT="KindTest" newState="110"/>
	  <state number="195" NT="NameTest" newState="111"/>
	  <state number="195" NT="WildCard" newState="112"/>
	  <state number="195" NT="DocumentTest" newState="113"/>
	  <state number="195" NT="ElementTest" newState="114"/>
	  <state number="195" NT="AttributeTest" newState="115"/>
	  <state number="195" NT="PITest" newState="116"/>
	  <state number="195" NT="CommentTest" newState="117"/>
	  <state number="195" NT="TextTest" newState="118"/>
	  <state number="195" NT="AnyKindTest" newState="119"/>
	  <state number="195" NT="BasicElementTest" newState="120"/>
	  <state number="195" NT="SchemaElementTest" newState="121"/>
	  <state number="195" NT="BasicAttributeTest" newState="122"/>
	  <state number="195" NT="SchemaAttributeTest" newState="123"/>
	  <state number="199" NT="ExprSingle" newState="240"/>
	  <state number="199" NT="ForExpr" newState="71"/>
	  <state number="199" NT="QuantifiedExpr" newState="72"/>
	  <state number="199" NT="IfExpr" newState="73"/>
	  <state number="199" NT="OrExpr" newState="74"/>
	  <state number="199" NT="VariableReference" newState="75"/>
	  <state number="199" NT="SomeOrEvery" newState="76"/>
	  <state number="199" NT="AndExpr" newState="77"/>
	  <state number="199" NT="ComparisonExpr" newState="78"/>
	  <state number="199" NT="RangeExpr" newState="79"/>
	  <state number="199" NT="AdditiveExpr" newState="80"/>
	  <state number="199" NT="MultiplicativeExpr" newState="81"/>
	  <state number="199" NT="Sign" newState="82"/>
	  <state number="199" NT="UnionExpr" newState="83"/>
	  <state number="199" NT="IntersectExceptExpr" newState="84"/>
	  <state number="199" NT="InstanceOfExpr" newState="85"/>
	  <state number="199" NT="TreatExpr" newState="86"/>
	  <state number="199" NT="CastableExpr" newState="87"/>
	  <state number="199" NT="CastExpr" newState="88"/>
	  <state number="199" NT="UnaryExpr" newState="89"/>
	  <state number="199" NT="PathExpr" newState="90"/>
	  <state number="199" NT="RelativePathExpr" newState="91"/>
	  <state number="199" NT="StepExpr" newState="92"/>
	  <state number="199" NT="AxisStep" newState="93"/>
	  <state number="199" NT="FilterExpr" newState="94"/>
	  <state number="199" NT="ForwardStep" newState="95"/>
	  <state number="199" NT="ReverseStep" newState="96"/>
	  <state number="199" NT="PrimaryExpr" newState="97"/>
	  <state number="199" NT="Literal" newState="98"/>
	  <state number="199" NT="ParenthesizedExpr" newState="99"/>
	  <state number="199" NT="ContextItemExpr" newState="100"/>
	  <state number="199" NT="FunctionCall" newState="101"/>
	  <state number="199" NT="NumericLiteral" newState="102"/>
	  <state number="199" NT="FunctionName" newState="103"/>
	  <state number="199" NT="QName" newState="104"/>
	  <state number="199" NT="ForwardAxis" newState="105"/>
	  <state number="199" NT="NodeTest" newState="106"/>
	  <state number="199" NT="AbbrevForwardStep" newState="107"/>
	  <state number="199" NT="ReverseAxis" newState="108"/>
	  <state number="199" NT="AbbrevReverseStep" newState="109"/>
	  <state number="199" NT="KindTest" newState="110"/>
	  <state number="199" NT="NameTest" newState="111"/>
	  <state number="199" NT="WildCard" newState="112"/>
	  <state number="199" NT="DocumentTest" newState="113"/>
	  <state number="199" NT="ElementTest" newState="114"/>
	  <state number="199" NT="AttributeTest" newState="115"/>
	  <state number="199" NT="PITest" newState="116"/>
	  <state number="199" NT="CommentTest" newState="117"/>
	  <state number="199" NT="TextTest" newState="118"/>
	  <state number="199" NT="AnyKindTest" newState="119"/>
	  <state number="199" NT="BasicElementTest" newState="120"/>
	  <state number="199" NT="SchemaElementTest" newState="121"/>
	  <state number="199" NT="BasicAttributeTest" newState="122"/>
	  <state number="199" NT="SchemaAttributeTest" newState="123"/>
	  <state number="200" NT="VariableReference" newState="241"/>
	  <state number="201" NT="ExprSingle" newState="242"/>
	  <state number="201" NT="ForExpr" newState="71"/>
	  <state number="201" NT="QuantifiedExpr" newState="72"/>
	  <state number="201" NT="IfExpr" newState="73"/>
	  <state number="201" NT="OrExpr" newState="74"/>
	  <state number="201" NT="VariableReference" newState="75"/>
	  <state number="201" NT="SomeOrEvery" newState="76"/>
	  <state number="201" NT="AndExpr" newState="77"/>
	  <state number="201" NT="ComparisonExpr" newState="78"/>
	  <state number="201" NT="RangeExpr" newState="79"/>
	  <state number="201" NT="AdditiveExpr" newState="80"/>
	  <state number="201" NT="MultiplicativeExpr" newState="81"/>
	  <state number="201" NT="Sign" newState="82"/>
	  <state number="201" NT="UnionExpr" newState="83"/>
	  <state number="201" NT="IntersectExceptExpr" newState="84"/>
	  <state number="201" NT="InstanceOfExpr" newState="85"/>
	  <state number="201" NT="TreatExpr" newState="86"/>
	  <state number="201" NT="CastableExpr" newState="87"/>
	  <state number="201" NT="CastExpr" newState="88"/>
	  <state number="201" NT="UnaryExpr" newState="89"/>
	  <state number="201" NT="PathExpr" newState="90"/>
	  <state number="201" NT="RelativePathExpr" newState="91"/>
	  <state number="201" NT="StepExpr" newState="92"/>
	  <state number="201" NT="AxisStep" newState="93"/>
	  <state number="201" NT="FilterExpr" newState="94"/>
	  <state number="201" NT="ForwardStep" newState="95"/>
	  <state number="201" NT="ReverseStep" newState="96"/>
	  <state number="201" NT="PrimaryExpr" newState="97"/>
	  <state number="201" NT="Literal" newState="98"/>
	  <state number="201" NT="ParenthesizedExpr" newState="99"/>
	  <state number="201" NT="ContextItemExpr" newState="100"/>
	  <state number="201" NT="FunctionCall" newState="101"/>
	  <state number="201" NT="NumericLiteral" newState="102"/>
	  <state number="201" NT="FunctionName" newState="103"/>
	  <state number="201" NT="QName" newState="104"/>
	  <state number="201" NT="ForwardAxis" newState="105"/>
	  <state number="201" NT="NodeTest" newState="106"/>
	  <state number="201" NT="AbbrevForwardStep" newState="107"/>
	  <state number="201" NT="ReverseAxis" newState="108"/>
	  <state number="201" NT="AbbrevReverseStep" newState="109"/>
	  <state number="201" NT="KindTest" newState="110"/>
	  <state number="201" NT="NameTest" newState="111"/>
	  <state number="201" NT="WildCard" newState="112"/>
	  <state number="201" NT="DocumentTest" newState="113"/>
	  <state number="201" NT="ElementTest" newState="114"/>
	  <state number="201" NT="AttributeTest" newState="115"/>
	  <state number="201" NT="PITest" newState="116"/>
	  <state number="201" NT="CommentTest" newState="117"/>
	  <state number="201" NT="TextTest" newState="118"/>
	  <state number="201" NT="AnyKindTest" newState="119"/>
	  <state number="201" NT="BasicElementTest" newState="120"/>
	  <state number="201" NT="SchemaElementTest" newState="121"/>
	  <state number="201" NT="BasicAttributeTest" newState="122"/>
	  <state number="201" NT="SchemaAttributeTest" newState="123"/>
	  <state number="220" NT="ExprSingle" newState="249"/>
	  <state number="220" NT="ForExpr" newState="71"/>
	  <state number="220" NT="QuantifiedExpr" newState="72"/>
	  <state number="220" NT="IfExpr" newState="73"/>
	  <state number="220" NT="OrExpr" newState="74"/>
	  <state number="220" NT="VariableReference" newState="75"/>
	  <state number="220" NT="SomeOrEvery" newState="76"/>
	  <state number="220" NT="AndExpr" newState="77"/>
	  <state number="220" NT="ComparisonExpr" newState="78"/>
	  <state number="220" NT="RangeExpr" newState="79"/>
	  <state number="220" NT="AdditiveExpr" newState="80"/>
	  <state number="220" NT="MultiplicativeExpr" newState="81"/>
	  <state number="220" NT="Sign" newState="82"/>
	  <state number="220" NT="UnionExpr" newState="83"/>
	  <state number="220" NT="IntersectExceptExpr" newState="84"/>
	  <state number="220" NT="InstanceOfExpr" newState="85"/>
	  <state number="220" NT="TreatExpr" newState="86"/>
	  <state number="220" NT="CastableExpr" newState="87"/>
	  <state number="220" NT="CastExpr" newState="88"/>
	  <state number="220" NT="UnaryExpr" newState="89"/>
	  <state number="220" NT="PathExpr" newState="90"/>
	  <state number="220" NT="RelativePathExpr" newState="91"/>
	  <state number="220" NT="StepExpr" newState="92"/>
	  <state number="220" NT="AxisStep" newState="93"/>
	  <state number="220" NT="FilterExpr" newState="94"/>
	  <state number="220" NT="ForwardStep" newState="95"/>
	  <state number="220" NT="ReverseStep" newState="96"/>
	  <state number="220" NT="PrimaryExpr" newState="97"/>
	  <state number="220" NT="Literal" newState="98"/>
	  <state number="220" NT="ParenthesizedExpr" newState="99"/>
	  <state number="220" NT="ContextItemExpr" newState="100"/>
	  <state number="220" NT="FunctionCall" newState="101"/>
	  <state number="220" NT="NumericLiteral" newState="102"/>
	  <state number="220" NT="FunctionName" newState="103"/>
	  <state number="220" NT="QName" newState="104"/>
	  <state number="220" NT="ForwardAxis" newState="105"/>
	  <state number="220" NT="NodeTest" newState="106"/>
	  <state number="220" NT="AbbrevForwardStep" newState="107"/>
	  <state number="220" NT="ReverseAxis" newState="108"/>
	  <state number="220" NT="AbbrevReverseStep" newState="109"/>
	  <state number="220" NT="KindTest" newState="110"/>
	  <state number="220" NT="NameTest" newState="111"/>
	  <state number="220" NT="WildCard" newState="112"/>
	  <state number="220" NT="DocumentTest" newState="113"/>
	  <state number="220" NT="ElementTest" newState="114"/>
	  <state number="220" NT="AttributeTest" newState="115"/>
	  <state number="220" NT="PITest" newState="116"/>
	  <state number="220" NT="CommentTest" newState="117"/>
	  <state number="220" NT="TextTest" newState="118"/>
	  <state number="220" NT="AnyKindTest" newState="119"/>
	  <state number="220" NT="BasicElementTest" newState="120"/>
	  <state number="220" NT="SchemaElementTest" newState="121"/>
	  <state number="220" NT="BasicAttributeTest" newState="122"/>
	  <state number="220" NT="SchemaAttributeTest" newState="123"/>
	  <state number="223" NT="Sign" newState="176"/>
	  <state number="224" NT="MultOper" newState="181"/>
	  <state number="226" NT="IntersectExcept" newState="186"/>
	  <state number="229" NT="QName" newState="130"/>
	  <state number="229" NT="KindTest" newState="251"/>
	  <state number="229" NT="AtomicType" newState="252"/>
	  <state number="229" NT="ItemType" newState="253"/>
	  <state number="229" NT="DocumentTest" newState="113"/>
	  <state number="229" NT="ElementTest" newState="114"/>
	  <state number="229" NT="AttributeTest" newState="115"/>
	  <state number="229" NT="PITest" newState="116"/>
	  <state number="229" NT="CommentTest" newState="117"/>
	  <state number="229" NT="TextTest" newState="118"/>
	  <state number="229" NT="AnyKindTest" newState="119"/>
	  <state number="229" NT="BasicElementTest" newState="120"/>
	  <state number="229" NT="SchemaElementTest" newState="121"/>
	  <state number="229" NT="BasicAttributeTest" newState="122"/>
	  <state number="229" NT="SchemaAttributeTest" newState="123"/>
	  <state number="235" NT="Expr" newState="254"/>
	  <state number="235" NT="ExprSingle" newState="70"/>
	  <state number="235" NT="ForExpr" newState="71"/>
	  <state number="235" NT="QuantifiedExpr" newState="72"/>
	  <state number="235" NT="IfExpr" newState="73"/>
	  <state number="235" NT="OrExpr" newState="74"/>
	  <state number="235" NT="VariableReference" newState="75"/>
	  <state number="235" NT="SomeOrEvery" newState="76"/>
	  <state number="235" NT="AndExpr" newState="77"/>
	  <state number="235" NT="ComparisonExpr" newState="78"/>
	  <state number="235" NT="RangeExpr" newState="79"/>
	  <state number="235" NT="AdditiveExpr" newState="80"/>
	  <state number="235" NT="MultiplicativeExpr" newState="81"/>
	  <state number="235" NT="Sign" newState="82"/>
	  <state number="235" NT="UnionExpr" newState="83"/>
	  <state number="235" NT="IntersectExceptExpr" newState="84"/>
	  <state number="235" NT="InstanceOfExpr" newState="85"/>
	  <state number="235" NT="TreatExpr" newState="86"/>
	  <state number="235" NT="CastableExpr" newState="87"/>
	  <state number="235" NT="CastExpr" newState="88"/>
	  <state number="235" NT="UnaryExpr" newState="89"/>
	  <state number="235" NT="PathExpr" newState="90"/>
	  <state number="235" NT="RelativePathExpr" newState="91"/>
	  <state number="235" NT="StepExpr" newState="92"/>
	  <state number="235" NT="AxisStep" newState="93"/>
	  <state number="235" NT="FilterExpr" newState="94"/>
	  <state number="235" NT="ForwardStep" newState="95"/>
	  <state number="235" NT="ReverseStep" newState="96"/>
	  <state number="235" NT="PrimaryExpr" newState="97"/>
	  <state number="235" NT="Literal" newState="98"/>
	  <state number="235" NT="ParenthesizedExpr" newState="99"/>
	  <state number="235" NT="ContextItemExpr" newState="100"/>
	  <state number="235" NT="FunctionCall" newState="101"/>
	  <state number="235" NT="NumericLiteral" newState="102"/>
	  <state number="235" NT="FunctionName" newState="103"/>
	  <state number="235" NT="QName" newState="104"/>
	  <state number="235" NT="ForwardAxis" newState="105"/>
	  <state number="235" NT="NodeTest" newState="106"/>
	  <state number="235" NT="AbbrevForwardStep" newState="107"/>
	  <state number="235" NT="ReverseAxis" newState="108"/>
	  <state number="235" NT="AbbrevReverseStep" newState="109"/>
	  <state number="235" NT="KindTest" newState="110"/>
	  <state number="235" NT="NameTest" newState="111"/>
	  <state number="235" NT="WildCard" newState="112"/>
	  <state number="235" NT="DocumentTest" newState="113"/>
	  <state number="235" NT="ElementTest" newState="114"/>
	  <state number="235" NT="AttributeTest" newState="115"/>
	  <state number="235" NT="PITest" newState="116"/>
	  <state number="235" NT="CommentTest" newState="117"/>
	  <state number="235" NT="TextTest" newState="118"/>
	  <state number="235" NT="AnyKindTest" newState="119"/>
	  <state number="235" NT="BasicElementTest" newState="120"/>
	  <state number="235" NT="SchemaElementTest" newState="121"/>
	  <state number="235" NT="BasicAttributeTest" newState="122"/>
	  <state number="235" NT="SchemaAttributeTest" newState="123"/>
	  <state number="244" NT="QName" newState="259"/>
	  <state number="244" NT="TypeName" newState="260"/>
	  <state number="246" NT="QName" newState="259"/>
	  <state number="246" NT="TypeName" newState="261"/>
	  <state number="253" NT="OccurenceIndicator" newState="266"/>
	  <state number="255" NT="ExprSingle" newState="268"/>
	  <state number="255" NT="ForExpr" newState="71"/>
	  <state number="255" NT="QuantifiedExpr" newState="72"/>
	  <state number="255" NT="IfExpr" newState="73"/>
	  <state number="255" NT="OrExpr" newState="74"/>
	  <state number="255" NT="VariableReference" newState="75"/>
	  <state number="255" NT="SomeOrEvery" newState="76"/>
	  <state number="255" NT="AndExpr" newState="77"/>
	  <state number="255" NT="ComparisonExpr" newState="78"/>
	  <state number="255" NT="RangeExpr" newState="79"/>
	  <state number="255" NT="AdditiveExpr" newState="80"/>
	  <state number="255" NT="MultiplicativeExpr" newState="81"/>
	  <state number="255" NT="Sign" newState="82"/>
	  <state number="255" NT="UnionExpr" newState="83"/>
	  <state number="255" NT="IntersectExceptExpr" newState="84"/>
	  <state number="255" NT="InstanceOfExpr" newState="85"/>
	  <state number="255" NT="TreatExpr" newState="86"/>
	  <state number="255" NT="CastableExpr" newState="87"/>
	  <state number="255" NT="CastExpr" newState="88"/>
	  <state number="255" NT="UnaryExpr" newState="89"/>
	  <state number="255" NT="PathExpr" newState="90"/>
	  <state number="255" NT="RelativePathExpr" newState="91"/>
	  <state number="255" NT="StepExpr" newState="92"/>
	  <state number="255" NT="AxisStep" newState="93"/>
	  <state number="255" NT="FilterExpr" newState="94"/>
	  <state number="255" NT="ForwardStep" newState="95"/>
	  <state number="255" NT="ReverseStep" newState="96"/>
	  <state number="255" NT="PrimaryExpr" newState="97"/>
	  <state number="255" NT="Literal" newState="98"/>
	  <state number="255" NT="ParenthesizedExpr" newState="99"/>
	  <state number="255" NT="ContextItemExpr" newState="100"/>
	  <state number="255" NT="FunctionCall" newState="101"/>
	  <state number="255" NT="NumericLiteral" newState="102"/>
	  <state number="255" NT="FunctionName" newState="103"/>
	  <state number="255" NT="QName" newState="104"/>
	  <state number="255" NT="ForwardAxis" newState="105"/>
	  <state number="255" NT="NodeTest" newState="106"/>
	  <state number="255" NT="AbbrevForwardStep" newState="107"/>
	  <state number="255" NT="ReverseAxis" newState="108"/>
	  <state number="255" NT="AbbrevReverseStep" newState="109"/>
	  <state number="255" NT="KindTest" newState="110"/>
	  <state number="255" NT="NameTest" newState="111"/>
	  <state number="255" NT="WildCard" newState="112"/>
	  <state number="255" NT="DocumentTest" newState="113"/>
	  <state number="255" NT="ElementTest" newState="114"/>
	  <state number="255" NT="AttributeTest" newState="115"/>
	  <state number="255" NT="PITest" newState="116"/>
	  <state number="255" NT="CommentTest" newState="117"/>
	  <state number="255" NT="TextTest" newState="118"/>
	  <state number="255" NT="AnyKindTest" newState="119"/>
	  <state number="255" NT="BasicElementTest" newState="120"/>
	  <state number="255" NT="SchemaElementTest" newState="121"/>
	  <state number="255" NT="BasicAttributeTest" newState="122"/>
	  <state number="255" NT="SchemaAttributeTest" newState="123"/>
	  <state number="257" NT="ExprSingle" newState="269"/>
	  <state number="257" NT="ForExpr" newState="71"/>
	  <state number="257" NT="QuantifiedExpr" newState="72"/>
	  <state number="257" NT="IfExpr" newState="73"/>
	  <state number="257" NT="OrExpr" newState="74"/>
	  <state number="257" NT="VariableReference" newState="75"/>
	  <state number="257" NT="SomeOrEvery" newState="76"/>
	  <state number="257" NT="AndExpr" newState="77"/>
	  <state number="257" NT="ComparisonExpr" newState="78"/>
	  <state number="257" NT="RangeExpr" newState="79"/>
	  <state number="257" NT="AdditiveExpr" newState="80"/>
	  <state number="257" NT="MultiplicativeExpr" newState="81"/>
	  <state number="257" NT="Sign" newState="82"/>
	  <state number="257" NT="UnionExpr" newState="83"/>
	  <state number="257" NT="IntersectExceptExpr" newState="84"/>
	  <state number="257" NT="InstanceOfExpr" newState="85"/>
	  <state number="257" NT="TreatExpr" newState="86"/>
	  <state number="257" NT="CastableExpr" newState="87"/>
	  <state number="257" NT="CastExpr" newState="88"/>
	  <state number="257" NT="UnaryExpr" newState="89"/>
	  <state number="257" NT="PathExpr" newState="90"/>
	  <state number="257" NT="RelativePathExpr" newState="91"/>
	  <state number="257" NT="StepExpr" newState="92"/>
	  <state number="257" NT="AxisStep" newState="93"/>
	  <state number="257" NT="FilterExpr" newState="94"/>
	  <state number="257" NT="ForwardStep" newState="95"/>
	  <state number="257" NT="ReverseStep" newState="96"/>
	  <state number="257" NT="PrimaryExpr" newState="97"/>
	  <state number="257" NT="Literal" newState="98"/>
	  <state number="257" NT="ParenthesizedExpr" newState="99"/>
	  <state number="257" NT="ContextItemExpr" newState="100"/>
	  <state number="257" NT="FunctionCall" newState="101"/>
	  <state number="257" NT="NumericLiteral" newState="102"/>
	  <state number="257" NT="FunctionName" newState="103"/>
	  <state number="257" NT="QName" newState="104"/>
	  <state number="257" NT="ForwardAxis" newState="105"/>
	  <state number="257" NT="NodeTest" newState="106"/>
	  <state number="257" NT="AbbrevForwardStep" newState="107"/>
	  <state number="257" NT="ReverseAxis" newState="108"/>
	  <state number="257" NT="AbbrevReverseStep" newState="109"/>
	  <state number="257" NT="KindTest" newState="110"/>
	  <state number="257" NT="NameTest" newState="111"/>
	  <state number="257" NT="WildCard" newState="112"/>
	  <state number="257" NT="DocumentTest" newState="113"/>
	  <state number="257" NT="ElementTest" newState="114"/>
	  <state number="257" NT="AttributeTest" newState="115"/>
	  <state number="257" NT="PITest" newState="116"/>
	  <state number="257" NT="CommentTest" newState="117"/>
	  <state number="257" NT="TextTest" newState="118"/>
	  <state number="257" NT="AnyKindTest" newState="119"/>
	  <state number="257" NT="BasicElementTest" newState="120"/>
	  <state number="257" NT="SchemaElementTest" newState="121"/>
	  <state number="257" NT="BasicAttributeTest" newState="122"/>
	  <state number="257" NT="SchemaAttributeTest" newState="123"/>
	  <state number="258" NT="ExprSingle" newState="270"/>
	  <state number="258" NT="ForExpr" newState="71"/>
	  <state number="258" NT="QuantifiedExpr" newState="72"/>
	  <state number="258" NT="IfExpr" newState="73"/>
	  <state number="258" NT="OrExpr" newState="74"/>
	  <state number="258" NT="VariableReference" newState="75"/>
	  <state number="258" NT="SomeOrEvery" newState="76"/>
	  <state number="258" NT="AndExpr" newState="77"/>
	  <state number="258" NT="ComparisonExpr" newState="78"/>
	  <state number="258" NT="RangeExpr" newState="79"/>
	  <state number="258" NT="AdditiveExpr" newState="80"/>
	  <state number="258" NT="MultiplicativeExpr" newState="81"/>
	  <state number="258" NT="Sign" newState="82"/>
	  <state number="258" NT="UnionExpr" newState="83"/>
	  <state number="258" NT="IntersectExceptExpr" newState="84"/>
	  <state number="258" NT="InstanceOfExpr" newState="85"/>
	  <state number="258" NT="TreatExpr" newState="86"/>
	  <state number="258" NT="CastableExpr" newState="87"/>
	  <state number="258" NT="CastExpr" newState="88"/>
	  <state number="258" NT="UnaryExpr" newState="89"/>
	  <state number="258" NT="PathExpr" newState="90"/>
	  <state number="258" NT="RelativePathExpr" newState="91"/>
	  <state number="258" NT="StepExpr" newState="92"/>
	  <state number="258" NT="AxisStep" newState="93"/>
	  <state number="258" NT="FilterExpr" newState="94"/>
	  <state number="258" NT="ForwardStep" newState="95"/>
	  <state number="258" NT="ReverseStep" newState="96"/>
	  <state number="258" NT="PrimaryExpr" newState="97"/>
	  <state number="258" NT="Literal" newState="98"/>
	  <state number="258" NT="ParenthesizedExpr" newState="99"/>
	  <state number="258" NT="ContextItemExpr" newState="100"/>
	  <state number="258" NT="FunctionCall" newState="101"/>
	  <state number="258" NT="NumericLiteral" newState="102"/>
	  <state number="258" NT="FunctionName" newState="103"/>
	  <state number="258" NT="QName" newState="104"/>
	  <state number="258" NT="ForwardAxis" newState="105"/>
	  <state number="258" NT="NodeTest" newState="106"/>
	  <state number="258" NT="AbbrevForwardStep" newState="107"/>
	  <state number="258" NT="ReverseAxis" newState="108"/>
	  <state number="258" NT="AbbrevReverseStep" newState="109"/>
	  <state number="258" NT="KindTest" newState="110"/>
	  <state number="258" NT="NameTest" newState="111"/>
	  <state number="258" NT="WildCard" newState="112"/>
	  <state number="258" NT="DocumentTest" newState="113"/>
	  <state number="258" NT="ElementTest" newState="114"/>
	  <state number="258" NT="AttributeTest" newState="115"/>
	  <state number="258" NT="PITest" newState="116"/>
	  <state number="258" NT="CommentTest" newState="117"/>
	  <state number="258" NT="TextTest" newState="118"/>
	  <state number="258" NT="AnyKindTest" newState="119"/>
	  <state number="258" NT="BasicElementTest" newState="120"/>
	  <state number="258" NT="SchemaElementTest" newState="121"/>
	  <state number="258" NT="BasicAttributeTest" newState="122"/>
	  <state number="258" NT="SchemaAttributeTest" newState="123"/>
	  <state number="275" NT="ExprSingle" newState="277"/>
	  <state number="275" NT="ForExpr" newState="71"/>
	  <state number="275" NT="QuantifiedExpr" newState="72"/>
	  <state number="275" NT="IfExpr" newState="73"/>
	  <state number="275" NT="OrExpr" newState="74"/>
	  <state number="275" NT="VariableReference" newState="75"/>
	  <state number="275" NT="SomeOrEvery" newState="76"/>
	  <state number="275" NT="AndExpr" newState="77"/>
	  <state number="275" NT="ComparisonExpr" newState="78"/>
	  <state number="275" NT="RangeExpr" newState="79"/>
	  <state number="275" NT="AdditiveExpr" newState="80"/>
	  <state number="275" NT="MultiplicativeExpr" newState="81"/>
	  <state number="275" NT="Sign" newState="82"/>
	  <state number="275" NT="UnionExpr" newState="83"/>
	  <state number="275" NT="IntersectExceptExpr" newState="84"/>
	  <state number="275" NT="InstanceOfExpr" newState="85"/>
	  <state number="275" NT="TreatExpr" newState="86"/>
	  <state number="275" NT="CastableExpr" newState="87"/>
	  <state number="275" NT="CastExpr" newState="88"/>
	  <state number="275" NT="UnaryExpr" newState="89"/>
	  <state number="275" NT="PathExpr" newState="90"/>
	  <state number="275" NT="RelativePathExpr" newState="91"/>
	  <state number="275" NT="StepExpr" newState="92"/>
	  <state number="275" NT="AxisStep" newState="93"/>
	  <state number="275" NT="FilterExpr" newState="94"/>
	  <state number="275" NT="ForwardStep" newState="95"/>
	  <state number="275" NT="ReverseStep" newState="96"/>
	  <state number="275" NT="PrimaryExpr" newState="97"/>
	  <state number="275" NT="Literal" newState="98"/>
	  <state number="275" NT="ParenthesizedExpr" newState="99"/>
	  <state number="275" NT="ContextItemExpr" newState="100"/>
	  <state number="275" NT="FunctionCall" newState="101"/>
	  <state number="275" NT="NumericLiteral" newState="102"/>
	  <state number="275" NT="FunctionName" newState="103"/>
	  <state number="275" NT="QName" newState="104"/>
	  <state number="275" NT="ForwardAxis" newState="105"/>
	  <state number="275" NT="NodeTest" newState="106"/>
	  <state number="275" NT="AbbrevForwardStep" newState="107"/>
	  <state number="275" NT="ReverseAxis" newState="108"/>
	  <state number="275" NT="AbbrevReverseStep" newState="109"/>
	  <state number="275" NT="KindTest" newState="110"/>
	  <state number="275" NT="NameTest" newState="111"/>
	  <state number="275" NT="WildCard" newState="112"/>
	  <state number="275" NT="DocumentTest" newState="113"/>
	  <state number="275" NT="ElementTest" newState="114"/>
	  <state number="275" NT="AttributeTest" newState="115"/>
	  <state number="275" NT="PITest" newState="116"/>
	  <state number="275" NT="CommentTest" newState="117"/>
	  <state number="275" NT="TextTest" newState="118"/>
	  <state number="275" NT="AnyKindTest" newState="119"/>
	  <state number="275" NT="BasicElementTest" newState="120"/>
	  <state number="275" NT="SchemaElementTest" newState="121"/>
	  <state number="275" NT="BasicAttributeTest" newState="122"/>
	  <state number="275" NT="SchemaAttributeTest" newState="123"/>
	</gotoTable>
<!--
       All symbols (terminal (T) or non-terminal (NT)
       are coded in this section 
-->
	<symbols>
	  <terminal>
	    <s>$end</s>
	    <s>error</s>
	    <s>COMMENT_START</s>
	    <s>COMMENT_END</s>
	    <s>DOUBLE_LITERAL</s>
	    <s>DECIMAL_LITERAL</s>
	    <s>INTEGER_LITERAL</s>
	    <s>STRING_LITERAL</s>
	    <s>OR</s>
	    <s>AND</s>
	    <s>EQ</s>
	    <s>NE</s>
	    <s>LT</s>
	    <s>LE</s>
	    <s>GT</s>
	    <s>GE</s>
	    <s>IS</s>
	    <s>TO</s>
	    <s>DIV</s>
	    <s>IDIV</s>
	    <s>MOD</s>
	    <s>UNION</s>
	    <s>INTERSECT</s>
	    <s>EXCEPT</s>
	    <s>INSTANCE_OF</s>
	    <s>CAST_AS</s>
	    <s>CASTABLE_AS</s>
	    <s>TREAT_AS</s>
	    <s>FOR</s>
	    <s>SOME</s>
	    <s>EVERY</s>
	    <s>IF</s>
	    <s>THEN</s>
	    <s>ELSE</s>
	    <s>IN</s>
	    <s>RETURN</s>
	    <s>SATISFIES</s>
	    <s>QNAME2</s>
	    <s>CHILD_AXIS</s>
	    <s>DESCENDANT_AXIS</s>
	    <s>ATTRIBUTE_AXIS</s>
	    <s>SELF_AXIS</s>
	    <s>DESCENDANT_OR_SELF_AXIS</s>
	    <s>FOLLOWING_SIBLING_AXIS</s>
	    <s>FOLLOWING_AXIS</s>
	    <s>NAMESPACE_AXIS</s>
	    <s>PARENT_AXIS</s>
	    <s>ANCESTOR_AXIS</s>
	    <s>PRECEDING_SIBLING_AXIS</s>
	    <s>PRECEDING_AXIS</s>
	    <s>ANCESTOR_OR_SELF_AXIS</s>
	    <s>EMPTY_TYPE</s>
	    <s>ITEM_TYPE</s>
	    <s>ELEMENT_TEST</s>
	    <s>ATTRIBUTE_TEST</s>
	    <s>SCHEMA_ELEMENT_TEST</s>
	    <s>SCHEMA_ATTRIBUTE_TEST</s>
	    <s>PROCESSING_INSTRUCTION_TEST</s>
	    <s>DOCUMENT_NODE_TEST</s>
	    <s>COMMENT_TEST</s>
	    <s>NODE_TEST</s>
	    <s>TEXT_TEST</s>
	    <s>WILD_NAME</s>
	    <s>WILD_PREFIX</s>
	    <s>,</s>
	    <s>&lt;&lt;</s>
	    <s>>></s>
	    <s>+</s>
	    <s>-</s>
	    <s>*</s>
	    <s>//</s>
	    <s>/</s>
	    <s>(</s>
	    <s>)</s>
	    <s>[</s>
	    <s>]</s>
	    <s>::</s>
	    <s>@</s>
	    <s>.</s>
	    <s>..</s>
	    <s>=</s>
	    <s>!=</s>
	    <s>&lt;</s>
	    <s>&lt;=</s>
	    <s>></s>
	    <s>>=</s>
	    <s>$</s>
	    <s>?</s>
	    <s>$end</s>
	    <s>error</s>
	  </terminal>
	  <nonTerminal>
	    <v>$accept</v>
	    <v>Expr</v>
	    <v>ExprSingle</v>
	    <v>ForExpr</v>
	    <v>QuantifiedExpr</v>
	    <v>IfExpr</v>
	    <v>OrExpr</v>
	    <v>VarnameList</v>
	    <v>VariableReference</v>
	    <v>SomeOrEvery</v>
	    <v>AndExpr</v>
	    <v>ComparisonExpr</v>
	    <v>RangeExpr</v>
	    <v>ValGenNodeComp</v>
	    <v>ValueComp</v>
	    <v>GeneralComp</v>
	    <v>NodeComp</v>
	    <v>AdditiveExpr</v>
	    <v>MultiplicativeExpr</v>
	    <v>Sign</v>
	    <v>UnionExpr</v>
	    <v>MultOper</v>
	    <v>IntersectExceptExpr</v>
	    <v>InstanceOfExpr</v>
	    <v>IntersectExcept</v>
	    <v>TreatExpr</v>
	    <v>SequenceType</v>
	    <v>CastableExpr</v>
	    <v>CastExpr</v>
	    <v>SingleType</v>
	    <v>UnaryExpr</v>
	    <v>PathExpr</v>
	    <v>RelativePathExpr</v>
	    <v>StepExpr</v>
	    <v>AxisStep</v>
	    <v>FilterExpr</v>
	    <v>ForwardStep</v>
	    <v>PredicateList</v>
	    <v>ReverseStep</v>
	    <v>PrimaryExpr</v>
	    <v>Predicate</v>
	    <v>Literal</v>
	    <v>ParenthesizedExpr</v>
	    <v>ContextItemExpr</v>
	    <v>FunctionCall</v>
	    <v>NumericLiteral</v>
	    <v>FunctionName</v>
	    <v>ExprSingleList</v>
	    <v>QName</v>
	    <v>ForwardAxis</v>
	    <v>NodeTest</v>
	    <v>AbbrevForwardStep</v>
	    <v>ReverseAxis</v>
	    <v>AbbrevReverseStep</v>
	    <v>KindTest</v>
	    <v>NameTest</v>
	    <v>WildCard</v>
	    <v>AtomicType</v>
	    <v>ItemType</v>
	    <v>OccurenceIndicator</v>
	    <v>DocumentTest</v>
	    <v>ElementTest</v>
	    <v>AttributeTest</v>
	    <v>PITest</v>
	    <v>CommentTest</v>
	    <v>TextTest</v>
	    <v>AnyKindTest</v>
	    <v>BasicElementTest</v>
	    <v>SchemaElementTest</v>
	    <v>BasicAttributeTest</v>
	    <v>SchemaAttributeTest</v>
	    <v>ElementNameOrWildCard</v>
	    <v>TypeName</v>
	    <v>AtttibuteNameOrWildCard</v>
	    <v>ElementName</v>
	    <v>AttributeName</v>
	  </nonTerminal>
	</symbols>
</parseTables>